var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddSubscription.html",[0,0.736,1,2.354]],["body/interfaces/AddSubscription.html",[1,3.774,2,0.842,3,0.842,4,0.59,5,3.527,6,0.913,7,3.527,8,2.87,9,2.215,10,4.025,11,2.859,12,4.025,13,4.781,14,4.814,15,4.781,16,3.071,17,1.902,18,1.902,19,0.711,20,1.18,21,4.781,22,5.15,23,2.215,24,4.781,25,1.768,26,0.026,27,1.531,28,0.478,29,1.326,30,1.147,31,0.02,32,0.023,33,0.02]],["title/interfaces/BackendFactoryInput.html",[0,0.736,34,2.354]],["body/interfaces/BackendFactoryInput.html",[2,0.696,3,0.696,4,0.488,6,0.754,19,0.587,26,0.028,28,0.508,29,1.409,31,0.016,32,0.021,33,0.016,34,3.353,35,2.608,36,5.926,37,3.748,38,3.706,39,5.079,40,1.747,41,2.076,42,1.409,43,4.727,44,2.408,45,3.038,46,1.572,47,2.915,48,3.951,49,4.277,50,3.326,51,2.915,52,3.951,53,3.951,54,1.461,55,3.951,56,3.951,57,3.951,58,1.359,59,3.353,60,0.537,61,3.326,62,3.951,63,2.076,64,5.079,65,4.046,66,1.572,67,4.277,68,4.277,69,1.695,70,2.915,71,2.179,72,4.142,73,1.311,74,2.179,75,1.572,76,1.626,77,2.775,78,3.326,79,3.326,80,2.363,81,2.608,82,3.326,83,3.326,84,3.326]],["title/interfaces/BackendInput.html",[0,0.736,85,2.354]],["body/interfaces/BackendInput.html",[2,0.789,3,0.789,4,0.553,6,0.855,19,0.666,26,0.026,28,0.595,29,1.72,31,0.018,32,0.023,33,0.018,35,2.957,37,3.305,38,2.957,42,1.797,44,2.659,46,1.783,58,1.891,60,0.608,65,3.628,71,2.357,72,4.388,73,1.156,74,2.357,75,1.783,76,1.76,77,3.003,78,3.772,79,3.772,80,2.679,81,2.957,82,3.772,83,3.772,84,3.772,85,2.957,86,4.479,87,2.249,88,1.921,89,3.772,90,3.772,91,4.479,92,3.772,93,3.772]],["title/interfaces/ConnectionBase.html",[0,0.736,94,1.791]],["body/interfaces/ConnectionBase.html",[2,0.565,3,0.565,4,0.396,6,0.613,8,2.22,9,2.049,14,2.701,16,2.22,17,1.277,18,1.277,19,0.477,20,1.044,22,3.723,23,1.486,25,1.871,26,0.028,27,1.416,28,0.546,29,1.227,30,1.214,31,0.013,32,0.018,33,0.013,41,1.186,45,2.644,58,1.104,60,0.436,63,2.115,66,1.277,76,1.416,94,1.611,95,1.919,96,1.919,97,3.208,98,1.919,99,0.828,100,1.871,101,1.635,102,2.979,103,3.208,104,3.208,105,1.611,106,2.701,107,3.208,108,1.104,109,2.701,110,3.208,111,1.486,112,2.22,113,2.701,114,2.764,115,2.416,116,1.919,117,2.367,118,3.208,119,1.919,120,3.208,121,2.701,122,1.919,123,3.208,124,1.486,125,2.049,126,3.208,127,2.701,128,4.422,129,3.208,130,1.318,131,3.208,132,3.208,133,3.208,134,2.416,135,2.701,136,1.753,137,2.701,138,1.753,139,3.208,140,3.208,141,3.208,142,2.701,143,3.208,144,2.22,145,2.701,146,3.208,147,3.208,148,0.565,149,1.104,150,1.76,151,2.701,152,1.753,153,3.208,154,2.701,155,2.016,156,2.701,157,3.208,158,2.367,159,1.919,160,2.701,161,3.208,162,2.367,163,3.208,164,3.208,165,3.208,166,1.611,167,2.118,168,3.208,169,3.208,170,1.277,171,2.118,172,1.486,173,2.367,174,3.208,175,2.049,176,2.118,177,2.118,178,3.208,179,2.118,180,3.208,181,2.701,182,3.208,183,0.956,184,2.701,185,3.208,186,3.262,187,3.208,188,1.277,189,1.919,190,3.208,191,1.376,192,1.277,193,1.753,194,2.701,195,2.118,196,2.701,197,1.753,198,1.486,199,3.208,200,1.486,201,3.208,202,1.486,203,2.701,204,3.208,205,2.367,206,2.118,207,1.753,208,1.611,209,3.208,210,3.208]],["title/modules/DndModule.html",[87,1.791,211,2.133]],["body/modules/DndModule.html",[3,0.869,4,0.609,20,1.018,25,1.824,26,0.027,27,1.579,28,0.494,29,1.368,30,1.183,31,0.02,32,0.024,33,0.02,34,3.845,35,3.256,70,3.639,85,3.845,87,2.476,212,3.256,213,3.639,214,5.219,215,4.153,216,4.932,217,4.932,218,4.932]],["title/injectables/DndService.html",[108,1.227,219,2.354]],["body/injectables/DndService.html",[1,3.8,3,0.519,4,0.364,5,2.175,6,0.796,7,2.175,8,2.427,9,2.887,17,1.659,19,0.438,20,0.86,23,1.366,25,2.129,26,0.028,27,1.548,28,0.642,29,1.341,30,1.16,31,0.012,32,0.017,33,0.012,40,1.014,41,1.09,45,2.492,60,0.4,75,1.173,99,0.761,100,1.541,102,1.611,108,1.014,111,1.931,114,1.611,119,1.763,124,1.931,125,2.569,148,0.926,170,1.924,183,1.242,186,3.075,188,1.173,192,2.291,198,1.931,200,1.931,207,1.611,208,1.48,220,2.948,221,1.763,222,1.156,223,2.482,224,1.946,225,2.948,226,2.482,227,2.948,228,2.948,229,2.482,230,1.946,231,1.264,232,2.948,233,3.075,234,2.948,235,2.24,236,2.948,237,1.264,238,2.948,239,2.093,240,1.264,241,1.611,242,2.948,243,2.175,244,2.948,245,2.175,246,1.763,247,1,248,2.482,249,2.948,250,2.948,251,1.763,252,2.948,253,2.948,254,2.948,255,5.756,256,2.871,257,2.035,258,2.435,259,2.948,260,2.254,261,2.751,262,1.434,263,3.567,264,2.482,265,1.788,266,2.093,267,1.924,268,2.492,269,0.928,270,1.611,271,1.763,272,1.434,273,2.948,274,1.48,275,2.948,276,2.482,277,2.482,278,1.366,279,3.075,280,2.175,281,2.482,282,2.482,283,2.948,284,2.948,285,1.946,286,2.948,287,1.48,288,2.948,289,1.946,290,1.156,291,1.09,292,2.948,293,2.277,294,4.168,295,2.751,296,1.788,297,3.509,298,3.509,299,2.948,300,2.948,301,2.948,302,2.751,303,1.48]],["title/interfaces/DragLayer.html",[0,0.736,256,1.948]],["body/interfaces/DragLayer.html",[2,0.491,3,0.491,4,0.344,6,0.533,18,1.11,19,0.415,20,0.827,25,1.482,26,0.027,27,0.893,28,0.583,29,0.774,30,0.669,31,0.011,32,0.016,33,0.011,40,1.867,42,1.506,46,1.11,47,2.058,54,1.031,58,1.378,60,0.696,63,1.482,73,1.21,75,1.11,80,1.668,94,2.011,95,1.668,96,1.668,101,2.007,102,1.524,112,1.4,130,1.194,142,2.348,144,1.4,145,2.348,148,1.171,149,1.944,150,1.866,152,1.524,155,1.734,158,2.058,159,2.396,172,1.292,183,0.831,191,1.196,193,1.524,196,2.348,197,1.524,198,1.856,200,1.292,208,1.4,222,1.301,231,1.196,240,1.196,245,2.058,256,2.189,260,2.011,269,0.621,272,0.959,285,3.095,289,1.841,304,1.524,305,2.956,306,1.031,307,3.46,308,2.011,309,2.789,310,2.811,311,2.789,312,2.058,313,2.789,314,1.668,315,1.841,316,1.841,317,1.196,318,2.789,319,2.789,320,3.373,321,3.583,322,2.789,323,2.348,324,1.841,325,5.248,326,2.058,327,4.007,328,4.17,329,2.789,330,1.718,331,2.396,332,1.524,333,2.011,334,1.841,335,2.789,336,1.841,337,2.348,338,2.789,339,2.789,340,2.789,341,2.789,342,2.058,343,2.789,344,1.292,345,1.668,346,2.789,347,1.11,348,2.804,349,2.058,350,1.292,351,2.011,352,1.841,353,1.841,354,2.348,355,1.668,356,2.956,357,1.841,358,2.348,359,2.789,360,2.348,361,2.058,362,2.789,363,1.031,364,1.668,365,1.11,366,2.058,367,2.789,368,2.058,369,2.789,370,2.789,371,4.007,372,2.789,373,2.789,374,2.348,375,2.396,376,2.789,377,1.524,378,2.348,379,2.058,380,1.4,381,2.789,382,2.058,383,2.789,384,2.348,385,1.524,386,2.789,387,1.524,388,1.841,389,2.789,390,2.058,391,2.789,392,2.789,393,2.645,394,1.668,395,1.668,396,2.058,397,1.668,398,2.058,399,1.841,400,2.348,401,2.348,402,2.789,403,2.789,404,2.789,405,2.789,406,3.373,407,1.841,408,2.348,409,1.292,410,2.789]],["title/interfaces/DragLayerMonitor.html",[0,0.736,348,2.133]],["body/interfaces/DragLayerMonitor.html",[2,0.869,3,0.869,4,0.609,6,0.942,18,1.963,19,0.733,20,1.202,26,0.025,30,1.183,31,0.02,32,0.024,33,0.02,74,2.116,130,1.47,148,0.869,175,2.872,256,2.695,347,1.963,348,2.95,411,4.153,412,3.256,413,2.116,414,2.476,415,1.963,416,2.476,417,3.639,418,2.695,419,3.256]],["title/directives/DragPreviewDirective.html",[274,1.791,420,2.354]],["body/directives/DragPreviewDirective.html",[3,0.835,4,0.585,6,0.905,19,0.705,26,0.026,28,0.569,31,0.019,32,0.023,33,0.019,40,1.631,42,1.315,44,2.033,148,1.002,257,1.957,262,1.631,269,1.056,272,1.957,296,2.033,308,2.856,310,2.636,315,3.129,420,3.129,421,2.196,422,3.129,423,2.033,424,2.835,425,2.835,426,3.498,427,3.129,428,6.095,429,3.402,430,3.33,431,4.741]],["title/interfaces/DragPreviewOptions.html",[0,0.736,430,1.948]],["body/interfaces/DragPreviewOptions.html",[2,0.561,3,0.561,4,0.393,6,0.608,19,0.473,26,0.025,28,0.571,29,1.756,31,0.013,32,0.018,33,0.013,44,1.366,46,1.75,71,1.887,73,0.822,74,1.887,112,1.599,116,1.904,148,1.115,176,2.102,183,1.311,192,1.75,202,2.038,222,0.884,257,1.095,269,0.98,272,1.87,278,1.475,287,2.729,305,2.35,306,2.181,310,2.933,314,2.631,315,2.102,321,2.102,330,1.366,344,1.475,350,2.038,351,1.887,368,2.35,415,2.005,418,2.403,430,1.74,432,2.35,433,5.435,434,5.435,435,4.243,436,5.435,437,5.435,438,3.178,439,3.588,440,4.01,441,4.576,442,5.435,443,3.223,444,3.246,445,4.399,446,3.184,447,4.399,448,4.399,449,4.461,450,4.576,451,2.681,452,4.399,453,4.399,454,3.184,455,4.243,456,2.35,457,2.35,458,3.184,459,2.35,460,2.35,461,1.599,462,1.904,463,3.184,464,3.184,465,3.184,466,1.599,467,2.681,468,4.399,469,3.184,470,2.681,471,3.184,472,3.184,473,3.184,474,3.184,475,3.184,476,1.904,477,2.35,478,4.399,479,1.178,480,3.184,481,1.74,482,3.184,483,3.184,484,1.74,485,2.102,486,2.904,487,2.403,488,3.704]],["title/interfaces/DragSource.html",[0,0.736,257,1.227]],["body/interfaces/DragSource.html",[2,0.52,3,0.52,4,0.364,6,0.564,9,2.571,17,1.175,18,1.175,19,0.439,20,0.999,25,1.79,26,0.028,27,1.684,28,0.631,29,1.343,30,1.331,31,0.012,32,0.017,33,0.012,41,1.092,42,0.819,44,2.256,46,1.661,54,1.79,58,1.016,60,0.657,63,1.543,94,1.483,95,1.766,96,1.766,99,1.357,100,1.543,108,1.016,113,2.486,124,1.368,136,2.28,138,1.613,144,1.483,148,0.853,149,1.016,155,1.092,183,0.88,222,0.819,231,1.79,235,2.242,237,1.267,247,0.708,257,1.981,258,1.368,260,1.267,261,1.949,263,3.079,265,2.256,266,2.095,267,1.175,269,1.078,271,1.766,272,1.436,278,2.242,290,0.819,295,1.949,310,1.368,314,3.444,316,2.755,375,3.145,377,1.613,380,1.483,385,1.613,387,1.613,421,1.933,423,2.076,430,2.28,438,1.483,466,2.095,479,1.79,489,2.179,490,1.766,491,2.486,492,2.179,493,2.179,494,2.43,495,2.486,496,1.766,497,3.513,498,3.513,499,4.075,500,4.075,501,2.953,502,2.755,503,2.755,504,2.755,505,2.496,506,2.953,507,1.613,508,2.179,509,2.179,510,2.953,511,2.179,512,3.513,513,3.513,514,3.079,515,3.513,516,3.513,517,2.953,518,2.496,519,2.486,520,1.949,521,2.953,522,3.513,523,2.486,524,1.949,525,2.179,526,2.496,527,2.486,528,1.949,529,2.179,530,3.513,531,2.953,532,2.953,533,4.173,534,1.766,535,2.953,536,2.953,537,2.953,538,2.953,539,2.953,540,2.953,541,2.953,542,2.953,543,2.953,544,2.953,545,2.953,546,1.483]],["title/directives/DragSourceDirective.html",[274,1.791,547,2.354]],["body/directives/DragSourceDirective.html",[3,0.763,4,0.535,6,0.827,19,0.644,26,0.027,28,0.631,31,0.018,32,0.022,33,0.018,40,1.49,42,1.202,44,1.858,60,0.731,74,1.858,80,2.59,99,1.118,100,1.602,134,2.367,188,1.724,222,1.202,257,2.168,262,1.49,265,1.858,266,2.175,269,0.965,272,1.49,296,1.858,306,1.602,308,2.703,310,2.007,330,1.858,415,1.724,418,2.367,421,2.007,422,2.859,423,1.858,426,3.196,427,2.859,429,3.22,435,3.647,485,2.859,487,2.367,494,2.703,518,3.503,547,2.859,548,5.384,549,5.384,550,4.332,551,3.647,552,3.647,553,1.858,554,3.647,555,3.647,556,4.332,557,4.332,558,4.332]],["title/interfaces/DragSourceMonitor.html",[0,0.736,559,2.133]],["body/interfaces/DragSourceMonitor.html",[2,0.627,3,0.627,4,0.439,6,0.679,17,1.415,18,1.415,19,0.529,20,1.101,26,0.026,30,1.592,31,0.024,32,0.019,33,0.015,60,0.483,66,1.887,74,2.288,75,1.415,88,1.525,101,1.315,105,1.785,130,1.06,148,0.94,175,2.636,188,1.415,192,1.415,198,2.197,221,2.126,239,1.785,247,1.279,262,1.631,267,1.415,268,2.126,269,0.792,278,1.647,290,1.808,291,1.753,347,1.415,382,2.624,387,1.943,398,2.624,412,2.347,413,1.525,414,1.785,415,2.426,416,2.38,417,3.498,418,2.59,419,2.347,424,2.126,457,2.624,461,1.785,484,1.943,505,2.835,524,2.347,534,2.126,559,2.126,560,2.994,561,3.556,562,4.591,563,4.79,564,4.49,565,2.994,566,2.59,567,1.647,568,3.556,569,2.994,570,1.785,571,3.556,572,3.556,573,2.994,574,2.624,575,3.556,576,2.994,577,2.994,578,2.624,579,3.189,580,2.347,581,2.835,582,2.994,583,2.624,584,2.994,585,2.994,586,2.994,587,2.994,588,2.994,589,2.624,590,2.994,591,2.994,592,3.129,593,2.624,594,2.994]],["title/interfaces/DragSourceOptions.html",[0,0.736,518,2.133]],["body/interfaces/DragSourceOptions.html",[2,0.785,3,0.785,4,0.55,6,0.851,19,0.663,26,0.027,28,0.446,29,1.52,31,0.018,32,0.022,33,0.018,42,1.236,60,0.605,71,2.35,73,1.15,75,1.773,112,2.751,183,1.328,257,1.885,265,1.911,293,2.434,306,1.648,326,3.288,351,1.911,379,3.288,394,2.665,432,3.288,485,2.941,486,3.617,518,2.665,595,4.456,596,4.995,597,3.916,598,4.194,599,4.613,600,4.613,601,4.456,602,2.941,603,4.456,604,3.752,605,4.456,606,4.456,607,4.456,608,4.456,609,3.752,610,4.456,611,4.456]],["title/interfaces/DragSourceSpec.html",[0,0.736,267,1.419]],["body/interfaces/DragSourceSpec.html",[0,0.912,2,0.443,3,0.443,4,0.31,6,0.48,17,1.478,18,1,19,0.374,20,0.767,25,1.925,26,0.028,27,1.562,28,0.601,29,1.712,30,1.249,31,0.015,32,0.018,33,0.01,42,0.697,54,0.93,58,0.865,60,0.341,66,2.072,69,1.078,71,1.078,74,1.593,75,1,81,1.659,88,1.593,98,1.503,108,0.865,114,1.373,115,1.373,125,1.165,130,1.681,134,1.373,136,1.373,144,1.262,148,0.86,150,1,155,0.93,162,1.855,166,1.262,175,1.721,183,1.107,191,2.093,198,1.165,206,1.659,222,1.606,235,1.165,243,1.855,247,0.891,248,2.117,251,2.221,260,1.593,262,1.278,265,1.078,267,1,268,2.221,269,1.214,279,1.855,285,2.452,289,1.659,290,1.445,291,1.374,296,1.078,303,1.262,304,1.373,306,1.634,312,1.855,317,1.593,347,1.478,349,1.855,350,1.165,351,1.895,363,0.93,385,2.977,388,1.659,399,1.659,409,1.721,413,1.593,415,1,416,1.262,438,1.865,459,1.855,460,1.855,461,1.262,476,1.503,479,0.93,481,1.373,490,1.503,493,1.855,507,1.373,528,1.659,534,1.503,546,2.614,553,1.078,559,3.646,562,2.741,567,2.261,570,1.262,579,2.918,581,1.503,594,2.117,596,2.117,597,2.452,598,1.659,609,2.117,612,2.117,613,1.855,614,1.855,615,1.373,616,1.503,617,1.659,618,2.117,619,1.855,620,2.514,621,2.514,622,2.514,623,2.514,624,2.117,625,1.855,626,2.514,627,3.127,628,4.418,629,2.514,630,3.715,631,3.715,632,2.117,633,1.659,634,1.855,635,2.514,636,3.715,637,2.514,638,2.514,639,2.514,640,2.514,641,2.514,642,2.514,643,2.117,644,1.659,645,2.514,646,2.117,647,2.117,648,2.514,649,2.452,650,1.855,651,2.514,652,1.855,653,2.514,654,2.117,655,2.117,656,2.117,657,2.514,658,2.117,659,2.514,660,2.514,661,2.514,662,2.117,663,2.514,664,2.514,665,2.514,666,1.659,667,2.514,668,1.373,669,2.117,670,2.514,671,2.514,672,2.514,673,2.514,674,1.373,675,3.715,676,1.855,677,2.514,678,2.117,679,2.514,680,2.117,681,2.514,682,1.855,683,2.117,684,2.514,685,2.117,686,2.514,687,2.741,688,2.514,689,1.659,690,1.659,691,2.452,692,2.117,693,1.855,694,1.373,695,2.117,696,2.117,697,2.117,698,1.855,699,2.117]],["title/interfaces/DropTarget.html",[0,0.736,258,1.652]],["body/interfaces/DropTarget.html",[2,0.676,3,0.676,4,0.473,6,0.732,7,2.83,9,2.565,17,1.526,18,1.526,19,0.57,20,1.029,25,1.843,26,0.026,27,1.596,28,0.634,29,1.383,30,1.406,31,0.016,32,0.02,33,0.016,42,1.064,46,1.526,54,1.418,58,1.319,60,0.521,63,1.418,69,1.645,73,0.99,94,1.926,95,2.294,96,2.294,99,1.429,100,1.418,101,1.418,108,1.319,111,1.777,136,2.095,138,2.095,144,1.926,148,0.676,149,1.319,155,1.843,231,1.645,235,1.777,237,1.645,247,1.328,257,1.714,258,2.565,261,2.532,270,2.095,271,2.294,272,1.714,278,2.565,290,1.536,295,2.532,302,3.289,314,3.31,377,2.095,385,2.095,421,1.777,423,2.137,466,1.926,479,1.843,494,2.502,496,2.294,499,4.66,502,2.532,503,2.532,504,2.532,505,2.294,512,3.229,513,3.229,514,2.83,515,3.229,516,3.229,519,3.229,520,2.532,522,4.195,523,3.229,524,2.532,525,2.83,526,2.294,570,1.926,674,2.095,700,4.983,701,4.983,702,3.835,703,3.835]],["title/directives/DropTargetDirective.html",[274,1.791,704,2.632]],["body/directives/DropTargetDirective.html",[3,0.765,4,0.536,6,0.829,11,3.225,19,0.646,25,1.606,26,0.026,27,1.391,28,0.614,29,1.205,30,1.042,31,0.018,32,0.022,33,0.018,60,0.59,80,2.597,99,1.121,100,1.606,134,2.373,144,2.18,188,1.728,222,1.205,247,1.042,258,2.922,272,1.494,302,3.871,361,3.979,421,2.012,422,2.867,423,1.863,426,3.204,427,2.867,429,3.225,494,2.707,551,3.656,552,3.656,553,1.863,554,3.656,704,3.204,705,6.133,706,6.133,707,5.392,708,5.392,709,5.392,710,4.54,711,5.392,712,5.392,713,3.656,714,4.343,715,4.343]],["title/interfaces/DropTargetMonitor.html",[0,0.736,716,2.133]],["body/interfaces/DropTargetMonitor.html",[2,0.631,3,0.631,4,0.442,6,0.683,17,1.424,18,1.424,19,0.532,20,1.104,25,1.323,26,0.026,27,1.146,28,0.535,29,0.993,30,1.585,31,0.024,32,0.02,33,0.015,44,1.535,60,0.486,66,1.424,74,2.295,75,1.894,88,1.535,101,1.323,130,1.067,148,0.839,177,3.143,179,3.765,192,1.424,198,2.206,239,1.796,247,1.368,262,1.638,263,2.64,268,2.14,278,1.658,290,1.843,291,1.761,296,1.535,347,1.424,350,1.658,363,1.323,387,1.955,412,2.362,413,1.535,414,1.796,415,2.43,416,2.39,417,3.513,418,2.601,419,2.362,424,2.14,457,2.64,466,1.796,505,2.847,524,2.362,534,2.14,563,4.802,564,4.505,565,3.013,566,1.955,578,2.64,580,2.362,581,2.847,582,3.013,583,2.64,584,3.013,585,4.008,586,3.013,587,3.013,588,3.013,589,3.948,590,3.013,591,3.013,592,2.362,593,3.513,668,1.955,716,2.14,717,3.013,718,3.578,719,3.578,720,4.761,721,3.578,722,2.64,723,2.64,724,3.578,725,3.013,726,2.64,727,3.578]],["title/interfaces/DropTargetSpec.html",[0,0.736,111,1.652]],["body/interfaces/DropTargetSpec.html",[2,0.591,3,0.591,4,0.414,6,0.64,17,2.21,19,0.499,20,0.941,25,2.148,26,0.026,27,1.658,28,0.581,29,1.754,30,1.333,31,0.019,32,0.019,33,0.014,60,0.455,66,1.814,69,1.955,73,0.865,74,1.438,75,1.814,81,3.008,88,1.955,98,2.005,105,1.683,108,1.154,111,1.554,114,1.832,115,2.49,119,2.005,125,1.554,130,1.543,134,1.832,144,2.288,148,0.591,150,1.334,166,1.683,179,3.417,181,2.823,183,1,191,1.438,198,2.399,206,2.213,222,1.436,247,1.437,251,2.005,260,2.382,262,1.568,267,1.814,268,2.005,269,1.015,279,2.474,290,1.701,291,1.24,306,1.24,317,1.955,320,2.823,333,1.683,347,1.334,357,2.213,363,1.24,394,2.005,409,1.554,413,1.438,415,1.334,418,1.832,419,2.213,425,2.005,459,2.474,466,1.683,505,2.005,553,1.438,566,1.832,567,2.112,579,2.005,580,2.213,581,2.005,589,3.363,593,2.474,613,2.474,614,2.474,615,1.832,616,2.725,617,2.213,644,3.417,662,2.823,690,2.213,691,3.008,692,2.823,693,2.474,694,1.832,695,2.823,696,2.823,697,2.823,698,2.474,699,2.823,716,3.73,728,2.823,729,3.353,730,2.823,731,3.353,732,3.353,733,2.213,734,2.823,735,2.823,736,3.353,737,3.353,738,3.353,739,3.353,740,3.353,741,3.353,742,2.823,743,3.353,744,3.353,745,2.823]],["title/interfaces/MonitorBase.html",[0,0.736,414,1.791]],["body/interfaces/MonitorBase.html",[2,0.629,3,0.629,4,0.441,6,0.682,19,0.531,20,1.103,26,0.028,28,0.357,30,1.593,31,0.015,32,0.019,33,0.015,99,1.227,130,1.064,136,1.951,148,0.838,192,2.643,230,2.357,260,2.798,265,1.532,266,1.793,267,1.421,269,0.795,272,1.635,333,2.387,350,2.886,351,2.747,352,2.357,355,2.843,356,4.378,414,1.793,416,1.793,443,3.242,444,4.205,746,3.006,747,3.006,748,2.357,749,5.344,750,5.344,751,5.344,752,5.344,753,5.344,754,5.344,755,5.344,756,5.934,757,4.798,758,3.571,759,4.754,760,4.5,761,3.571,762,2.635,763,4.754,764,3.571,765,3.006]],["title/interfaces/Offset.html",[0,0.736,443,1.948]],["body/interfaces/Offset.html",[2,0.857,3,0.857,4,0.6,6,0.928,19,0.723,26,0.026,28,0.616,31,0.02,32,0.024,33,0.02,71,2.477,88,2.085,401,5.187,438,3.2,443,2.656,766,3.588,767,3.588,768,4.862,769,4.862,770,5.366,771,5.366]],["title/changelog.html",[352,2.005,772,2.558,773,3.038]],["body/changelog.html",[4,0.585,11,3.645,26,0.023,31,0.019,32,0.023,33,0.019,73,1.224,150,1.887,240,2.614,241,3.33,317,2.033,567,2.824,774,4.741,775,4.741,776,4.741,777,3.991,778,4.741,779,3.991,780,3.991,781,4.741,782,4.741,783,6.095,784,6.095,785,4.741,786,6.095,787,4.497,788,4.741,789,4.741,790,4.741,791,4.741]],["title/coverage.html",[792,4]],["body/coverage.html",[0,1.374,1,2.244,4,0.42,5,3.394,26,0.028,28,0.34,31,0.014,32,0.019,33,0.014,34,2.244,35,3.037,41,1.257,85,2.244,94,1.707,95,3.341,96,3.341,108,1.17,111,1.575,189,3.679,219,2.244,247,0.816,256,1.858,257,1.17,258,1.575,267,1.353,269,0.757,274,2.618,348,2.033,411,2.863,412,3.442,414,1.707,420,2.244,422,3.442,430,1.858,432,3.394,443,1.858,518,2.033,547,2.244,559,2.033,560,2.863,612,2.863,613,3.394,704,2.509,716,2.033,717,2.863,728,2.863,746,2.863,747,2.863,766,2.509,767,2.509,792,2.863,793,2.244,794,3.4,795,3.4,796,5.754,797,6.016,798,5.586,799,5.837,800,3.4,801,5.214,802,3.4,803,5.179,804,2.863,805,6.152,806,2.863,807,2.863,808,2.863,809,2.863,810,2.509,811,2.863,812,3.4,813,3.4]],["title/dependencies.html",[787,2.242,814,3.584]],["body/dependencies.html",[8,2.491,26,0.028,31,0.02,32,0.024,33,0.02,76,1.589,77,2.71,814,4.921,815,4.961,816,4.961,817,4.961,818,4.961,819,4.961,820,6.213,821,3.661,822,4.961,823,4.961]],["title/index.html",[19,0.452,352,2.005,772,2.558]],["body/index.html",[2,0.437,4,0.306,16,1.246,26,0.015,31,0.01,32,0.015,33,0.01,38,2.428,40,1.265,42,1.345,47,1.831,54,1.36,58,0.853,60,0.595,69,1.578,73,0.64,76,2.073,77,2.395,90,2.089,99,0.64,112,1.246,115,1.355,134,2.01,148,0.854,152,1.355,155,0.917,159,1.484,166,1.246,170,2.449,171,1.638,172,2.247,183,0.74,188,1.464,191,2.08,197,1.355,202,1.149,207,1.355,221,2.2,222,0.688,224,1.638,237,1.064,240,2.526,241,2.01,247,0.595,281,2.089,285,2.428,289,1.638,290,1.345,293,2.01,304,2.395,305,1.831,308,2.201,317,1.88,324,1.638,332,1.355,342,1.831,344,1.704,353,1.638,354,3.097,363,1.36,364,2.622,380,1.246,388,1.638,395,1.484,396,1.831,416,1.246,439,1.638,450,2.089,456,1.831,460,1.831,461,1.246,476,1.484,477,1.831,479,1.36,484,2.01,491,2.089,514,1.831,553,2.408,567,1.149,570,1.847,581,1.484,615,1.355,619,1.831,624,2.089,625,1.831,632,2.089,633,1.638,634,1.831,647,2.089,668,2.01,674,1.355,680,3.097,682,1.831,689,1.638,690,2.428,691,1.638,698,1.831,725,2.089,733,1.638,742,2.089,745,2.089,748,1.638,787,1.831,793,2.428,824,2.481,825,3.691,826,3.678,827,2.481,828,2.481,829,2.481,830,2.481,831,3.578,832,2.089,833,1.831,834,2.481,835,1.831,836,2.428,837,2.481,838,2.481,839,2.481,840,2.481,841,2.481,842,1.831,843,2.481,844,2.481,845,2.089,846,2.481,847,2.481,848,2.481,849,2.481,850,2.481,851,2.089,852,2.089,853,2.481,854,1.831,855,2.481,856,2.481,857,2.481,858,2.089,859,2.481,860,2.481,861,2.481,862,1.484,863,2.481,864,2.481,865,2.481,866,2.089,867,2.481,868,2.089,869,1.831,870,2.481,871,2.481,872,2.089,873,2.481,874,2.481,875,3.678,876,2.481,877,1.831,878,2.481,879,2.481,880,2.089,881,2.714,882,2.089,883,3.097,884,2.481,885,2.481,886,2.089,887,2.481,888,2.481,889,1.831,890,2.481,891,2.089,892,2.089,893,2.481,894,2.481,895,2.481,896,2.481,897,2.481,898,2.481,899,2.481,900,2.089,901,2.481,902,2.481,903,1.831,904,2.481,905,2.481,906,2.481,907,2.089,908,2.089,909,2.481,910,2.481,911,2.481,912,2.481,913,2.481,914,2.481,915,2.481,916,2.481,917,2.481,918,2.089,919,2.481,920,2.481,921,2.481,922,2.481,923,2.481,924,2.481,925,2.481,926,2.481,927,2.481,928,2.481,929,2.481,930,1.638,931,1.831,932,2.481,933,2.481,934,2.428,935,2.481,936,2.481,937,2.481,938,1.831,939,1.831,940,4.384,941,3.678,942,2.481,943,2.481,944,2.481,945,2.481,946,1.831,947,2.481,948,2.481,949,2.481,950,2.481,951,3.678,952,2.481,953,2.481,954,2.481,955,2.481,956,2.089,957,2.481,958,2.481,959,1.638,960,2.481,961,2.481,962,4.849,963,2.089,964,2.089,965,2.481,966,2.481,967,2.481,968,2.481,969,2.481,970,2.481,971,2.481,972,2.089,973,2.481,974,2.481,975,2.481,976,2.481,977,2.089,978,1.831,979,4.384,980,2.481,981,3.678,982,2.481]],["title/modules.html",[212,3.136]],["body/modules.html",[26,0.025,31,0.022,32,0.025,33,0.022,87,2.669,212,3.509,983,4.476]],["title/overview.html",[984,4]],["body/overview.html",[2,0.92,26,0.025,31,0.021,32,0.025,33,0.021,211,3.121,219,3.445,287,3.022,421,2.418,984,4.394,985,3.121,986,5.219]],["title/miscellaneous/typealiases.html",[987,2.005,988,4.257]],["body/miscellaneous/typealiases.html",[19,0.693,26,0.027,28,0.467,31,0.019,32,0.023,33,0.019,46,1.856,63,2.324,124,2.61,265,2.696,266,3.156,290,1.294,291,1.724,302,3.718,766,3.441,767,4.156,930,3.718,987,3.078,989,4.663,990,5.632,991,6.435,992,5.632,993,5.632,994,5.632,995,4.663,996,4.663]],["title/miscellaneous/variables.html",[987,2.005,997,3.584]],["body/miscellaneous/variables.html",[19,0.531,26,0.028,28,0.57,31,0.015,32,0.019,33,0.015,41,2.257,42,1.693,44,2.039,46,1.421,50,3.006,60,0.774,65,2.357,68,3.006,72,2.635,73,0.922,76,2.115,77,3.609,112,1.793,119,2.135,155,1.32,192,1.421,247,0.857,266,2.387,269,0.795,306,2.303,382,2.635,487,3.403,555,3.006,713,3.006,722,3.943,733,4.111,803,3.006,804,4.003,806,4.003,807,4.003,808,4.003,809,4.003,810,3.508,811,4.003,934,2.357,987,2.357,997,3.006,998,6.229,999,6.102,1000,5.138,1001,6.102,1002,2.635,1003,3.571,1004,3.571,1005,4.003,1006,4.754,1007,3.571,1008,3.571,1009,3.571,1010,3.571,1011,3.006]],["title/additional-documentation/quickstart.html",[365,1.209,835,2.242,1012,1.408]],["body/additional-documentation/quickstart.html",[2,0.388,10,1.854,11,1.317,12,1.854,16,1.106,26,0.028,28,0.337,31,0.009,32,0.017,33,0.009,38,2.22,40,1.571,41,0.814,42,1.766,43,1.854,46,0.876,49,3.435,54,0.814,58,1.157,59,2.22,60,0.62,63,1.819,65,1.454,66,1.338,70,1.625,71,0.945,73,0.568,76,1.727,87,2.293,88,0.945,89,3.435,92,1.854,93,2.832,99,1.179,101,0.814,112,2.469,115,1.203,116,1.317,117,1.625,122,1.317,124,1.02,125,1.02,130,1.003,148,1.042,149,1.157,150,0.876,152,1.203,155,1.244,170,1.957,172,1.89,191,0.945,192,0.876,202,1.02,207,1.837,211,2.44,212,1.454,214,1.854,222,1.132,229,1.854,235,1.02,237,1.443,239,1.106,240,2.11,241,1.837,246,3.225,247,0.528,251,1.317,260,1.443,262,0.758,266,1.106,269,1.017,272,0.758,280,1.625,290,1.365,291,0.814,293,1.203,303,1.106,306,1.509,308,2.708,310,1.558,314,2.44,324,1.454,326,1.625,328,1.625,330,1.75,332,1.203,334,1.454,342,1.625,344,2.402,345,2.731,347,0.876,364,2.44,377,2.229,380,1.689,393,2.22,396,2.482,397,1.317,407,2.693,409,1.558,415,0.876,416,1.106,423,1.443,439,1.454,440,1.625,461,1.689,462,1.317,476,1.317,479,1.689,481,1.203,484,1.203,485,2.693,487,1.203,495,1.854,496,1.317,502,1.454,526,1.317,553,1.443,562,1.625,566,1.203,567,1.02,579,1.317,592,2.22,604,1.854,616,1.317,617,1.454,619,1.625,646,1.854,668,1.203,683,1.854,693,1.625,733,1.454,748,1.454,765,1.854,793,1.454,832,1.854,833,1.625,836,1.454,845,1.854,851,1.854,866,1.854,891,1.854,918,1.854,931,1.625,934,2.22,959,1.454,978,1.625,983,2.832,985,2.011,1013,2.203,1014,1.625,1015,2.203,1016,4.919,1017,1.854,1018,3.363,1019,2.832,1020,3.435,1021,1.454,1022,2.203,1023,1.854,1024,2.203,1025,2.203,1026,2.941,1027,2.203,1028,2.203,1029,1.625,1030,1.454,1031,1.854,1032,3.363,1033,2.229,1034,3.363,1035,2.203,1036,1.854,1037,1.854,1038,2.203,1039,2.203,1040,2.203,1041,2.203,1042,2.203,1043,1.854,1044,1.454,1045,2.832,1046,1.854,1047,1.854,1048,1.454,1049,1.454,1050,2.203,1051,2.203,1052,2.203,1053,1.854,1054,3.363,1055,2.203,1056,2.203,1057,2.832,1058,2.203,1059,2.203,1060,1.625,1061,2.203,1062,1.854,1063,2.203,1064,2.203,1065,2.203,1066,2.203,1067,1.625,1068,1.854,1069,2.203,1070,2.203,1071,3.363,1072,3.363,1073,2.203,1074,3.363,1075,2.203,1076,3.363,1077,2.203,1078,2.203,1079,2.203,1080,3.363,1081,2.203,1082,2.203,1083,2.203,1084,2.203,1085,2.203,1086,2.203,1087,2.203,1088,2.203,1089,2.203,1090,2.203,1091,2.203,1092,2.203,1093,2.203,1094,2.203,1095,2.203,1096,1.625,1097,2.203,1098,2.832,1099,1.854,1100,2.203,1101,2.203,1102,2.203,1103,2.203,1104,2.203,1105,2.203,1106,3.363,1107,1.854,1108,1.854,1109,2.203,1110,2.203,1111,1.854,1112,2.832,1113,2.203,1114,2.203,1115,1.854,1116,2.203,1117,1.854,1118,2.203,1119,2.203]],["title/additional-documentation/guide.html",[365,1.209,1012,1.408,1049,2.005]],["body/additional-documentation/guide.html",[17,1.902,20,0.987,26,0.023,31,0.02,32,0.023,33,0.02,40,1.645,45,2.859,60,0.776,76,1.531,99,1.476,100,2.114,101,2.114,149,1.967,150,1.902,200,2.215,231,2.05,233,3.527,240,2.05,270,2.612,287,2.4,331,2.859,332,2.612,398,3.527,421,2.215,424,2.859,425,2.859,494,2.4,496,2.859,1048,3.156,1120,3.156,1121,3.156,1122,4.025,1123,2.859,1124,4.781,1125,4.781,1126,3.156,1127,4.781]],["title/additional-documentation/guide/1.-creating-connections.html",[287,1.176,365,0.933,1012,1.086,1120,1.547,1121,1.547]],["body/additional-documentation/guide/1.-creating-connections.html",[8,2.065,9,2.415,16,1.452,20,0.849,23,1.34,26,0.028,28,0.289,31,0.012,32,0.017,33,0.012,40,1.646,41,1.07,54,1.07,60,0.558,63,1.07,69,1.241,73,0.747,76,1.317,94,1.452,99,1.345,100,2.115,101,1.77,102,2.247,108,1.894,111,1.34,124,1.906,125,1.34,130,0.862,137,3.463,148,0.725,150,1.637,155,2.036,183,0.862,186,2.135,189,1.73,191,1.241,193,1.581,200,2.551,202,1.906,208,2.065,222,1.669,223,2.436,224,1.91,226,2.436,230,1.91,231,2.454,235,1.906,237,1.241,243,2.135,245,3.035,246,1.73,247,1.148,256,1.581,257,1.415,258,1.906,262,1.415,267,1.151,269,1.066,270,1.581,290,0.803,291,1.07,297,2.436,303,1.452,304,1.581,306,1.07,321,1.91,344,1.34,345,1.73,351,1.764,363,1.07,366,2.135,375,1.73,385,1.581,393,1.91,400,2.436,423,1.764,438,1.452,461,1.452,462,1.73,479,1.07,529,2.135,546,1.452,574,3.035,602,1.91,627,3.463,710,3.463,877,3.035,881,2.135,903,2.135,930,1.91,939,2.135,1014,2.135,1026,1.73,1029,2.135,1030,1.91,1033,1.581,1044,1.91,1062,2.436,1115,2.436,1120,2.715,1121,3.159,1123,1.73,1128,3.845,1129,4.113,1130,3.531,1131,4.113,1132,2.893,1133,2.893,1134,2.436,1135,3.035,1136,2.135,1137,2.893,1138,2.893,1139,2.893,1140,2.893,1141,2.893,1142,3.463,1143,3.035,1144,2.893,1145,2.436,1146,2.893,1147,2.893,1148,2.893,1149,2.893,1150,2.436,1151,2.135,1152,2.893,1153,2.893,1154,2.893,1155,2.135,1156,2.893,1157,2.893,1158,2.893,1159,4.113,1160,5.211,1161,2.436,1162,2.893,1163,2.893,1164,2.436,1165,2.436,1166,3.463,1167,2.893,1168,2.893,1169,2.893,1170,2.893,1171,2.893,1172,2.893,1173,2.436,1174,2.436]],["title/additional-documentation/guide/2.-connecting-to-dom.html",[99,0.605,167,1.547,365,0.933,1012,1.086,1123,1.401]],["body/additional-documentation/guide/2.-connecting-to-dom.html",[20,0.615,23,1.38,26,0.028,27,1.344,31,0.012,32,0.017,33,0.012,40,1.987,41,1.102,42,1.165,44,1.278,60,0.717,73,1.084,99,1.363,100,1.553,102,2.294,105,2.108,111,1.38,114,1.627,116,1.781,130,0.888,148,1.046,149,1.025,150,1.185,170,1.185,183,0.888,205,3.098,215,2.508,221,1.781,230,1.966,231,1.278,237,1.278,247,1.007,257,1.673,260,1.278,267,1.671,269,1.083,270,2.294,271,1.781,272,2.148,274,1.496,290,1.349,291,1.102,293,1.627,296,1.278,303,1.496,306,1.102,308,1.496,310,2.676,315,2.772,316,3.21,321,1.966,325,2.508,330,1.278,331,2.511,332,1.627,333,2.108,336,1.966,344,1.38,345,1.781,350,1.945,351,1.278,363,1.102,377,1.627,390,2.198,393,2.772,394,3.454,395,2.511,409,1.945,413,1.801,420,1.966,429,1.781,430,1.627,449,3.098,462,1.781,479,1.102,481,1.627,486,2.772,507,1.627,508,2.198,509,2.198,511,2.198,546,1.496,547,1.966,598,1.966,602,1.966,618,2.508,644,1.966,649,1.966,666,1.966,674,1.627,678,2.508,689,2.772,694,2.656,726,2.198,842,2.198,862,1.781,880,2.508,956,2.508,1002,2.198,1014,2.198,1122,3.535,1123,1.781,1126,1.966,1130,3.098,1175,2.979,1176,2.979,1177,2.979,1178,4.199,1179,4.199,1180,2.979,1181,4.199,1182,4.199,1183,3.098,1184,4.199,1185,4.199,1186,3.535,1187,4.199,1188,2.979,1189,2.508,1190,2.979,1191,2.508,1192,2.508,1193,2.979,1194,4.199,1195,2.979,1196,2.979,1197,4.199,1198,2.979,1199,2.979,1200,2.508,1201,2.979,1202,2.979,1203,2.979,1204,2.979,1205,2.508,1206,2.979,1207,2.979,1208,2.979,1209,2.198,1210,2.979,1211,2.508,1212,2.979,1213,2.508,1214,2.508,1215,2.979,1216,2.979,1217,2.979]],["title/additional-documentation/guide/3.-monitoring-state.html",[149,0.806,365,0.933,985,1.401,1012,1.086,1126,1.547]],["body/additional-documentation/guide/3.-monitoring-state.html",[2,0.761,8,1.558,20,0.892,23,2.303,26,0.028,28,0.432,30,0.744,31,0.013,32,0.018,33,0.013,54,1.148,58,1.068,60,0.587,63,1.148,69,1.331,71,1.853,76,0.994,100,1.598,101,2.09,105,2.169,122,1.856,125,2.303,130,1.789,136,1.695,138,1.695,148,0.761,149,1.71,152,1.695,160,2.613,166,1.558,170,1.235,172,2.002,175,1.438,177,2.049,183,1.602,188,1.719,189,1.856,193,2.361,195,2.852,197,2.361,202,1.438,206,2.852,207,2.716,222,1.199,235,1.438,237,1.331,247,1.29,258,1.438,262,1.71,278,1.438,290,1.379,317,1.331,330,1.331,333,1.558,347,1.719,348,1.856,355,2.584,357,2.049,361,2.29,363,1.148,364,1.856,380,1.558,397,1.856,399,2.049,409,2.002,413,1.331,414,1.558,415,1.235,425,1.856,438,1.558,443,1.695,476,2.584,479,1.148,490,3.215,527,2.613,559,1.856,567,1.438,570,2.169,576,2.613,597,2.049,615,1.695,617,2.049,666,2.049,687,2.29,691,2.049,694,1.695,716,1.856,723,3.668,757,2.613,777,2.613,831,2.29,862,1.856,931,2.29,1023,2.613,1030,2.049,1033,2.937,1044,2.049,1053,2.613,1068,2.613,1126,2.049,1128,3.188,1189,2.613,1209,2.29,1218,2.613,1219,2.613,1220,3.188,1221,2.613,1222,3.103,1223,4.971,1224,3.638,1225,3.103,1226,3.103,1227,3.103,1228,4.321,1229,3.103,1230,2.613,1231,2.613,1232,2.613,1233,3.103,1234,3.103,1235,3.103,1236,3.103,1237,4.321,1238,3.103,1239,2.613,1240,3.103,1241,2.613,1242,3.103,1243,2.29,1244,2.613,1245,2.613,1246,4.321,1247,3.103,1248,3.103,1249,2.613,1250,3.103,1251,3.638,1252,3.103,1253,3.103,1254,3.103,1255,3.103,1256,2.29,1257,2.613,1258,3.103,1259,3.103,1260,3.103,1261,2.613]],["title/additional-documentation/chess-tutorial.html",[365,1.053,836,1.747,889,1.952,1012,1.226]],["body/additional-documentation/chess-tutorial.html",[0,0.305,4,0.348,8,1.23,9,0.382,11,0.494,16,1.71,20,0.415,23,0.685,26,0.028,27,0.264,28,0.083,30,0.198,31,0.01,32,0.006,33,0.003,40,0.842,41,1.554,42,0.229,45,0.494,46,0.589,54,0.305,59,2.96,60,0.495,61,0.695,63,0.547,66,1.45,69,0.862,73,0.382,75,1.247,76,1.003,87,0.414,88,0.354,98,1.465,99,0.382,101,0.547,102,0.808,106,0.695,108,1.172,109,0.695,116,0.885,117,0.609,122,0.885,124,0.382,127,1.245,130,0.441,138,0.451,148,0.831,149,0.691,150,0.328,151,0.695,152,0.451,154,0.695,155,1.703,166,0.414,167,2.872,170,0.328,171,1.327,172,0.931,173,0.609,175,0.685,176,0.545,177,1.861,179,2.069,183,1.015,184,0.695,188,1.833,189,0.494,191,1.344,193,0.451,197,1.338,200,1.135,202,1.135,203,0.695,205,2.312,208,1.415,211,0.885,213,0.609,219,1.617,221,2.037,222,1.337,231,1.05,235,0.382,237,0.354,239,1.415,240,1.209,241,0.808,246,2.937,247,0.752,251,1.686,262,0.284,265,0.862,269,0.698,272,0.284,278,0.685,287,2.11,290,1.386,291,0.743,293,0.451,296,0.354,298,0.695,304,0.451,307,1.483,308,0.414,310,1.135,316,1.327,317,1.05,323,1.245,330,1.209,331,0.494,332,0.451,333,0.743,334,0.545,336,0.976,344,1.947,345,0.494,347,0.589,349,0.609,350,0.685,351,0.634,353,1.617,355,0.494,356,2.979,357,1.617,358,0.695,360,0.695,363,0.743,365,0.328,366,1.807,374,1.692,375,2.037,378,0.695,379,1.807,380,0.414,384,0.695,387,0.808,390,0.609,394,0.494,395,0.885,397,0.494,406,1.245,407,1.327,409,0.931,413,0.634,415,0.328,423,0.354,424,0.885,427,1.861,438,0.743,440,1.483,441,0.695,444,1.091,449,0.609,451,1.245,455,0.695,456,1.091,462,0.885,466,0.743,467,1.245,470,1.692,477,1.091,479,1.159,481,0.808,484,0.808,486,0.545,487,1.098,488,0.695,489,0.609,490,0.494,493,0.609,494,0.414,502,0.545,503,0.545,504,0.545,507,1.861,508,0.609,509,0.609,511,0.609,526,0.494,529,0.609,534,0.494,546,0.414,553,1.05,566,0.451,567,0.382,569,0.695,570,1.829,573,0.695,574,1.807,578,0.609,583,0.609,592,0.545,598,2.405,600,0.695,602,0.545,614,0.609,615,1.338,616,0.494,625,0.609,633,0.976,634,0.609,643,0.695,644,0.545,649,1.617,650,0.609,652,1.091,654,2.373,655,0.695,656,0.695,658,0.695,666,0.545,668,0.451,674,0.451,676,1.091,682,3.851,685,0.695,687,0.609,689,0.545,694,1.098,723,0.609,730,0.695,734,0.695,735,3.538,748,0.545,760,0.695,762,0.609,770,3.878,771,3.971,779,0.695,780,1.245,796,3.663,821,2.513,825,1.692,831,1.807,835,0.609,836,1.617,842,1.807,852,0.695,854,0.609,858,0.695,862,0.885,877,0.609,881,1.091,883,0.695,886,0.695,889,2.688,892,1.692,900,0.695,903,0.609,907,0.695,930,0.545,938,1.483,939,0.609,946,0.609,959,0.545,963,0.695,978,0.609,985,1.202,1017,0.695,1021,2.872,1026,1.686,1029,1.807,1030,0.545,1031,1.692,1033,1.54,1037,0.695,1044,0.545,1045,0.695,1046,2.373,1047,2.373,1048,1.327,1049,0.976,1057,1.692,1060,0.609,1067,1.091,1096,0.609,1099,0.695,1108,1.245,1112,1.245,1128,1.091,1130,1.483,1134,1.245,1135,1.807,1136,1.807,1143,0.609,1150,3.399,1151,0.609,1155,0.609,1164,0.695,1165,0.695,1166,0.695,1173,1.692,1174,0.695,1183,1.091,1186,0.695,1192,0.695,1200,0.695,1205,0.695,1209,1.091,1213,0.695,1214,0.695,1218,0.695,1219,0.695,1220,0.609,1221,0.695,1224,0.695,1230,0.695,1231,0.695,1232,0.695,1239,1.245,1241,0.695,1243,1.091,1244,0.695,1245,0.695,1249,0.695,1257,0.695,1261,0.695,1262,0.825,1263,3.406,1264,5.778,1265,0.695,1266,0.825,1267,0.825,1268,1.479,1269,2.01,1270,4.202,1271,1.479,1272,3.406,1273,4.35,1274,2.449,1275,4.35,1276,3.643,1277,2.01,1278,3.643,1279,1.479,1280,0.825,1281,0.825,1282,0.609,1283,2.01,1284,0.825,1285,0.825,1286,0.825,1287,1.479,1288,1.091,1289,0.825,1290,1.479,1291,2.01,1292,0.825,1293,0.825,1294,3.643,1295,2.449,1296,1.479,1297,0.825,1298,2.449,1299,1.479,1300,0.825,1301,4.037,1302,0.825,1303,0.825,1304,1.479,1305,2.01,1306,0.825,1307,0.825,1308,0.825,1309,0.825,1310,0.825,1311,0.825,1312,1.479,1313,0.825,1314,2.01,1315,2.01,1316,0.825,1317,1.479,1318,0.825,1319,1.479,1320,1.479,1321,0.825,1322,0.825,1323,0.825,1324,1.479,1325,0.825,1326,0.825,1327,0.825,1328,0.825,1329,2.819,1330,0.695,1331,2.01,1332,2.449,1333,3.134,1334,0.825,1335,0.825,1336,2.449,1337,0.825,1338,0.825,1339,1.479,1340,0.825,1341,0.825,1342,0.825,1343,0.825,1344,0.825,1345,1.479,1346,2.819,1347,0.825,1348,0.825,1349,0.825,1350,0.825,1351,1.479,1352,2.819,1353,1.245,1354,0.825,1355,0.825,1356,0.695,1357,0.825,1358,0.825,1359,0.825,1360,0.825,1361,1.479,1362,1.479,1363,0.825,1364,0.825,1365,0.825,1366,0.825,1367,0.695,1368,0.825,1369,0.825,1370,0.825,1371,0.825,1372,0.825,1373,0.825,1374,1.479,1375,0.825,1376,5.076,1377,0.825,1378,0.825,1379,0.825,1380,0.825,1381,0.825,1382,1.479,1383,0.825,1384,2.639,1385,0.825,1386,0.825,1387,0.825,1388,3.134,1389,2.062,1390,0.695,1391,0.695,1392,0.825,1393,3.852,1394,2.819,1395,0.825,1396,0.695,1397,0.825,1398,0.825,1399,0.825,1400,1.479,1401,0.825,1402,0.825,1403,0.825,1404,0.825,1405,0.825,1406,0.825,1407,1.479,1408,1.479,1409,0.825,1410,0.825,1411,1.479,1412,0.825,1413,0.825,1414,0.825,1415,0.825,1416,0.825,1417,0.825,1418,0.825,1419,0.825,1420,0.825,1421,0.825,1422,0.825,1423,1.692,1424,0.825,1425,0.825,1426,1.479,1427,0.825,1428,0.825,1429,1.479,1430,1.479,1431,0.825,1432,0.825,1433,1.479,1434,2.01,1435,0.825,1436,1.479,1437,0.825,1438,1.479,1439,0.825,1440,0.825,1441,0.825,1442,0.825,1443,0.825,1444,0.825,1445,1.479,1446,1.479,1447,0.825,1448,0.825,1449,0.825,1450,0.825,1451,0.825,1452,0.825,1453,0.825,1454,0.695,1455,1.479,1456,0.825,1457,0.825,1458,0.825,1459,0.825,1460,0.825,1461,0.825,1462,0.825,1463,0.825,1464,0.825,1465,0.825,1466,0.695,1467,0.825,1468,1.479,1469,0.825,1470,0.825,1471,0.825,1472,3.643,1473,0.695,1474,0.825,1475,0.825,1476,0.825,1477,2.062,1478,0.825,1479,1.479,1480,0.825,1481,0.825,1482,0.825,1483,0.825,1484,2.01,1485,0.825,1486,0.825,1487,0.825,1488,0.825,1489,0.825,1490,1.479,1491,0.825,1492,1.479,1493,0.825,1494,0.825,1495,1.479,1496,0.695,1497,0.695,1498,0.825,1499,0.825,1500,0.825,1501,1.479,1502,0.825,1503,0.695,1504,0.825,1505,0.825,1506,0.825,1507,0.825,1508,0.825,1509,0.825,1510,0.825,1511,0.825,1512,0.695,1513,0.825,1514,0.825,1515,0.825,1516,0.825,1517,0.825,1518,0.825,1519,0.825,1520,2.819,1521,2.062,1522,0.825,1523,0.825,1524,1.479,1525,0.825,1526,2.01,1527,0.695,1528,1.479,1529,0.825,1530,0.825,1531,0.825,1532,0.825,1533,0.695,1534,0.825,1535,0.825,1536,0.825,1537,0.825,1538,0.825,1539,0.825,1540,0.825,1541,0.825,1542,0.825,1543,0.825,1544,0.825,1545,1.479,1546,1.479,1547,0.825,1548,0.825,1549,0.825,1550,0.825,1551,0.825,1552,0.825,1553,0.825,1554,0.825,1555,0.825,1556,0.825,1557,0.825,1558,0.825,1559,0.825,1560,0.825,1561,0.825,1562,0.825,1563,0.825,1564,0.825,1565,0.825,1566,0.825,1567,0.825,1568,2.819,1569,0.825,1570,0.825,1571,0.825,1572,0.825,1573,1.479,1574,0.825,1575,1.479,1576,0.825,1577,1.479,1578,0.825,1579,0.825,1580,0.825,1581,0.825,1582,0.825]],["title/additional-documentation/translating-react-code.html",[170,0.933,172,1.086,365,0.933,869,1.729,1012,1.086]],["body/additional-documentation/translating-react-code.html",[2,0.32,9,1.339,18,0.722,20,0.374,23,1.67,26,0.028,28,0.361,30,0.435,31,0.007,32,0.012,33,0.007,40,1.24,41,0.671,51,2.133,54,1.069,58,1.645,59,1.908,60,0.489,63,1.66,66,1.434,69,1.24,71,0.778,73,0.93,76,1.859,88,0.778,99,1.235,100,1.52,101,1.069,105,0.911,108,0.994,114,1.579,119,1.085,122,1.085,124,0.84,125,2.08,130,1.6,135,1.527,138,1.579,148,0.724,149,0.994,155,1.926,156,1.527,158,1.338,159,1.085,162,1.338,166,0.911,167,1.197,170,2.453,171,1.197,172,2.08,173,1.338,175,1.904,176,1.908,183,0.541,188,1.786,192,1.434,193,0.991,194,1.527,195,1.197,197,1.579,198,0.84,200,0.84,202,0.84,207,1.969,208,0.911,222,1.684,231,1.546,233,1.338,239,0.911,240,1.24,257,0.994,260,0.778,261,1.197,262,1.414,264,1.527,265,0.778,269,0.404,270,0.991,271,1.085,274,1.451,276,1.527,277,2.434,280,1.338,282,1.527,287,0.911,295,1.197,296,1.546,303,0.911,304,0.991,306,0.671,312,1.338,317,1.546,324,1.197,328,1.338,330,0.778,331,1.729,334,2.963,336,1.197,344,1.339,350,1.339,351,1.24,353,1.908,355,1.085,363,0.671,364,2.155,375,2.155,380,0.911,387,0.991,388,1.197,395,1.085,397,1.085,399,1.197,407,1.197,408,1.527,409,1.904,413,0.778,421,1.339,423,0.778,425,1.729,429,2.155,439,1.197,461,2.064,466,0.911,481,1.579,484,0.991,487,0.991,489,1.338,490,2.155,492,1.338,494,2.064,496,1.085,497,1.527,498,3.034,500,1.527,503,1.197,507,0.991,525,1.338,526,1.085,528,1.197,530,1.527,546,1.451,553,2.553,570,1.451,577,1.527,579,1.729,597,1.197,599,1.527,615,2.246,616,1.085,633,1.197,649,1.197,652,2.133,674,2.453,676,1.338,694,0.991,762,1.338,793,1.908,854,1.338,862,1.085,868,1.527,869,1.338,872,1.527,908,1.527,934,1.908,938,1.338,959,2.379,964,1.527,972,1.527,977,1.527,985,1.085,1002,1.338,1011,1.527,1021,2.379,1026,2.685,1033,1.579,1036,1.527,1048,1.908,1096,1.338,1098,2.434,1107,2.434,1111,1.527,1117,1.527,1121,2.713,1123,1.085,1135,1.338,1145,1.527,1151,2.133,1155,1.338,1161,1.527,1256,1.338,1265,2.434,1282,1.338,1288,1.338,1330,1.527,1353,1.527,1356,1.527,1367,1.527,1384,2.434,1389,1.527,1390,1.527,1423,2.434,1466,1.527,1473,1.527,1477,1.527,1496,1.527,1497,1.527,1503,1.527,1512,2.434,1521,3.034,1527,1.527,1583,1.814,1584,1.814,1585,1.814,1586,1.814,1587,1.814,1588,1.814,1589,1.814,1590,1.814,1591,1.814,1592,1.814,1593,1.814,1594,1.814,1595,1.814,1596,1.814,1597,2.891,1598,5.807,1599,4.783,1600,1.814,1601,1.814,1602,1.814,1603,2.891,1604,2.434,1605,1.814,1606,1.814,1607,1.814,1608,1.814,1609,1.814,1610,1.814,1611,1.814,1612,1.814,1613,1.814,1614,1.814,1615,1.814,1616,1.814,1617,3.603,1618,2.891,1619,2.891,1620,1.814,1621,1.814,1622,2.891,1623,4.11,1624,3.603,1625,1.814,1626,2.891,1627,1.814,1628,1.814,1629,1.814,1630,1.814,1631,1.814,1632,1.814,1633,1.814,1634,1.814,1635,1.814,1636,1.814,1637,2.891,1638,1.814,1639,1.814,1640,1.814,1641,1.814,1642,1.814,1643,1.814,1644,1.814,1645,1.814,1646,1.814,1647,1.814,1648,1.814,1649,1.814,1650,1.814,1651,1.814,1652,1.814,1653,1.814,1654,1.814,1655,1.814,1656,1.814,1657,1.814,1658,1.814,1659,1.814,1660,1.814,1661,1.814,1662,1.814,1663,1.814,1664,3.034,1665,1.814,1666,1.527,1667,1.814,1668,1.814,1669,1.814,1670,1.814,1671,1.814,1672,1.814,1673,2.891,1674,1.814,1675,1.814,1676,1.814,1677,1.814,1678,1.814]],["title/additional-documentation/testing.html",[365,1.209,520,2.005,1012,1.408]],["body/additional-documentation/testing.html",[16,1.316,26,0.029,31,0.011,32,0.016,33,0.011,37,1.935,42,1.758,51,1.935,58,0.902,60,0.52,66,1.043,67,3.812,73,0.677,76,1.829,77,1.432,87,1.316,98,1.568,99,0.677,105,1.923,108,1.318,115,1.432,121,2.208,148,1.07,149,0.902,159,1.568,170,2.202,175,1.215,188,1.043,191,1.125,192,1.043,195,1.731,200,1.215,208,1.923,211,1.568,213,1.935,222,1.47,224,2.529,239,1.316,240,1.643,241,2.093,246,3.417,247,1.271,269,1.18,290,1.585,291,0.97,296,1.125,303,1.316,307,1.935,317,1.125,330,1.125,333,1.316,337,2.208,347,1.043,363,1.417,368,1.935,377,2.093,385,1.432,479,1.674,492,1.935,504,1.731,507,2.093,520,3.497,528,1.731,546,1.316,553,1.125,566,1.432,580,3.944,650,1.935,668,1.432,669,2.208,690,1.731,722,1.935,726,1.935,810,1.935,821,1.935,833,1.935,882,2.208,946,1.935,1000,2.208,1005,2.208,1019,2.208,1020,2.208,1021,1.731,1026,2.291,1033,1.432,1043,3.226,1049,1.731,1060,1.935,1067,3.34,1120,1.731,1136,1.935,1142,2.208,1143,1.935,1183,1.935,1191,2.208,1211,3.226,1220,1.935,1243,1.935,1251,2.208,1256,1.935,1282,1.935,1288,1.935,1391,2.208,1396,2.208,1454,3.226,1533,2.208,1604,4.192,1664,2.208,1666,2.208,1679,3.831,1680,3.831,1681,2.622,1682,2.622,1683,2.622,1684,2.622,1685,2.622,1686,2.622,1687,2.622,1688,2.622,1689,2.622,1690,2.622,1691,2.622,1692,2.622,1693,2.622,1694,2.622,1695,2.622,1696,2.622,1697,3.831,1698,3.831,1699,2.622,1700,3.831,1701,2.622,1702,2.622,1703,2.622,1704,2.622,1705,3.831,1706,3.831,1707,2.622,1708,2.622,1709,2.622,1710,2.622,1711,2.622,1712,2.622,1713,2.622,1714,2.622,1715,2.622,1716,2.622,1717,4.527,1718,2.622,1719,2.622,1720,2.622,1721,2.622,1722,2.622,1723,2.622,1724,2.622,1725,2.622,1726,2.622,1727,2.622,1728,2.622,1729,2.622,1730,2.622]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["0",{"_index":440,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0..63",{"_index":1379,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.1.1",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["0.25",{"_index":1506,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.5",{"_index":441,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0.8.26",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["07",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":287,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragPreviewOptions.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["1.0.0",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":796,"title":{},"body":{"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["12.5",{"_index":1362,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["14",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["14.0.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":986,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":1358,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["2",{"_index":167,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["2/2",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["2d",{"_index":914,"title":{},"body":{"index.html":{}}}],["3",{"_index":985,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["3/3",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1477,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["4/4",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1297,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5",{"_index":1389,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["5.5",{"_index":1557,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5/5",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["54px",{"_index":1299,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["560px",{"_index":1366,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["6",{"_index":1663,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["6.0.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1277,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["700",{"_index":1491,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["70px",{"_index":1302,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8",{"_index":1382,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8/8",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["8x8",{"_index":1351,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["above",{"_index":334,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["abramov",{"_index":828,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":1345,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abstraction",{"_index":876,"title":{},"body":{"index.html":{}}}],["accept",{"_index":1042,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["accepts",{"_index":91,"title":{},"body":{"interfaces/BackendInput.html":{}}}],["access",{"_index":1256,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["accessors",{"_index":707,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["accomplish",{"_index":1626,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["achieve",{"_index":1321,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["action",{"_index":610,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["actions",{"_index":81,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["actual",{"_index":1584,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["actually",{"_index":907,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["add",{"_index":16,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["add(teardown",{"_index":103,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["add(teardownlogic",{"_index":21,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["added",{"_index":1367,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["adding",{"_index":1015,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["additional",{"_index":1012,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}},"body":{}}],["addsubscription",{"_index":1,"title":{"interfaces/AddSubscription.html":{}},"body":{"interfaces/AddSubscription.html":{},"injectables/DndService.html":{},"coverage.html":{}}}],["advanced",{"_index":1115,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["advantage",{"_index":864,"title":{},"body":{"index.html":{}}}],["advice",{"_index":367,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["affected",{"_index":1318,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["again",{"_index":1023,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["aliases",{"_index":989,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1334,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allow",{"_index":1462,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allowing",{"_index":710,"title":{},"body":{"directives/DropTargetDirective.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["allows",{"_index":423,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["already",{"_index":466,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alt",{"_index":639,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["alternate",{"_index":1053,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alternatives",{"_index":925,"title":{},"body":{"index.html":{}}}],["always",{"_index":1209,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ambitious",{"_index":887,"title":{},"body":{"index.html":{}}}],["amend",{"_index":1433,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anchorx",{"_index":433,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["anchory",{"_index":434,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["angular",{"_index":553,"title":{},"body":{"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["angular's",{"_index":61,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/chess-tutorial.html":{}}}],["angular/common",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":821,"title":{},"body":{"dependencies.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["angular/core/testing",{"_index":1702,"title":{},"body":{"additional-documentation/testing.html":{}}}],["angular/platform",{"_index":1703,"title":{},"body":{"additional-documentation/testing.html":{}}}],["another",{"_index":689,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["answer",{"_index":1470,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anything",{"_index":390,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anyway",{"_index":695,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["aot",{"_index":49,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["api",{"_index":51,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["apis",{"_index":849,"title":{},"body":{"index.html":{}}}],["app",{"_index":1047,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["app.module.ts",{"_index":1087,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["appear",{"_index":696,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["appearance",{"_index":1514,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["appearance—even",{"_index":684,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["applies",{"_index":556,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["apply",{"_index":467,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["applying",{"_index":1210,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["appmodule",{"_index":1022,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["approach",{"_index":1631,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["appropriate",{"_index":280,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["aptly",{"_index":55,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["arbitrarily",{"_index":1326,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arbitrary",{"_index":1675,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["area",{"_index":897,"title":{},"body":{"index.html":{}}}],["aren't",{"_index":958,"title":{},"body":{"index.html":{}}}],["argument",{"_index":277,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["arguments",{"_index":1635,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["around",{"_index":205,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array",{"_index":930,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array(64).fill(0).map((_",{"_index":1350,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arrow",{"_index":1098,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["ask",{"_index":404,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["asking",{"_index":283,"title":{},"body":{"injectables/DndService.html":{}}}],["assembly",{"_index":1071,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["assign",{"_index":632,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["assigning",{"_index":273,"title":{},"body":{"injectables/DndService.html":{}}}],["associated",{"_index":1660,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["assumes",{"_index":1279,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assuming",{"_index":1556,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assumptions",{"_index":1513,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["async",{"_index":1220,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["asynchronous",{"_index":1673,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["attach",{"_index":1130,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attached",{"_index":1165,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attaching",{"_index":1316,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["attention",{"_index":1338,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["automatic",{"_index":392,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["automatically",{"_index":512,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["available",{"_index":347,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["avoid",{"_index":657,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["avoiding",{"_index":253,"title":{},"body":{"injectables/DndService.html":{}}}],["aware",{"_index":1639,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["backend",{"_index":42,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["backend's",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend.simulatebegindrag([source",{"_index":1721,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulatedrop",{"_index":1726,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulateenddrag",{"_index":1727,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulatehover([target",{"_index":1723,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backendexample",{"_index":1696,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backendfactory",{"_index":65,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["backendfactoryfactory",{"_index":57,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["backendfactoryinput",{"_index":34,"title":{"interfaces/BackendFactoryInput.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"modules/DndModule.html":{},"coverage.html":{}}}],["backendinput",{"_index":85,"title":{"interfaces/BackendInput.html":{}},"body":{"interfaces/BackendInput.html":{},"modules/DndModule.html":{},"coverage.html":{}}}],["backendnext",{"_index":834,"title":{},"body":{"index.html":{}}}],["backendorbackendfactory",{"_index":217,"title":{},"body":{"modules/DndModule.html":{}}}],["backends",{"_index":38,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["backendyou",{"_index":1013,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["background",{"_index":1224,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backgroundcolor",{"_index":1314,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bare",{"_index":926,"title":{},"body":{"index.html":{}}}],["base",{"_index":97,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["base.ts",{"_index":747,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["based",{"_index":380,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["basic",{"_index":1288,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["basics",{"_index":1281,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["batches",{"_index":860,"title":{},"body":{"index.html":{}}}],["bbb",{"_index":1422,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["become",{"_index":736,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["becomes",{"_index":322,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["before",{"_index":762,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["beforeeach",{"_index":1711,"title":{},"body":{"additional-documentation/testing.html":{}}}],["beforeeach(async",{"_index":1709,"title":{},"body":{"additional-documentation/testing.html":{}}}],["begindrag",{"_index":546,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["begindrag(monitor",{"_index":645,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["behaviorsubject",{"_index":1394,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["behaviour",{"_index":270,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["behavioursubject",{"_index":1402,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["being",{"_index":350,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["belong",{"_index":966,"title":{},"body":{"index.html":{}}}],["below",{"_index":1191,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["benefit",{"_index":974,"title":{},"body":{"index.html":{}}}],["best",{"_index":623,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["better",{"_index":1411,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["between",{"_index":439,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["beyond",{"_index":1144,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["bg",{"_index":1568,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["big",{"_index":1328,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["biggest",{"_index":1616,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["binding",{"_index":554,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["bit",{"_index":1468,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["black",{"_index":1273,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blindly",{"_index":568,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["block",{"_index":1329,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blocks",{"_index":880,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["board",{"_index":682,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["boardcomponent",{"_index":1276,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boardsquarecomponent",{"_index":1520,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["body",{"_index":1310,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boilerplate",{"_index":1398,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bones",{"_index":927,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":74,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["boolean;then",{"_index":1311,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["border",{"_index":1357,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["born",{"_index":951,"title":{},"body":{"index.html":{}}}],["both",{"_index":616,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["bottom",{"_index":457,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["bound",{"_index":187,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["bounding",{"_index":1178,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["box",{"_index":1197,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["break",{"_index":1266,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["breaking",{"_index":1432,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["brevity's",{"_index":1364,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broadcast",{"_index":1399,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broken",{"_index":558,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["browse",{"_index":983,"title":{},"body":{"modules.html":{},"additional-documentation/quickstart.html":{}}}],["browser",{"_index":1060,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["browsers",{"_index":601,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["browsing",{"_index":1052,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["bug",{"_index":965,"title":{},"body":{"index.html":{}}}],["build",{"_index":1290,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["builder",{"_index":919,"title":{},"body":{"index.html":{}}}],["building",{"_index":825,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["bump",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["c.candrop",{"_index":1564,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["c.isdragging",{"_index":190,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["c.isover",{"_index":1563,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cad",{"_index":915,"title":{},"body":{"index.html":{}}}],["call",{"_index":235,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["callback",{"_index":114,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["callbacks",{"_index":207,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["called",{"_index":198,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["calling",{"_index":1093,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["came",{"_index":1511,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["can't",{"_index":1096,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["candrag",{"_index":562,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["candrag(monitor",{"_index":661,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["candrop",{"_index":179,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["candrop(monitor",{"_index":731,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["canmoveknight",{"_index":1434,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["canmoveknight(to",{"_index":1440,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["capturedraggingstate",{"_index":435,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{}}}],["card",{"_index":679,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["cards",{"_index":905,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1257,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["case",{"_index":181,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetSpec.html":{}}}],["cases",{"_index":305,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["cat",{"_index":1223,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["cats",{"_index":1222,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["center",{"_index":1335,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["certain",{"_index":311,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["chain",{"_index":587,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["change",{"_index":317,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["changelog",{"_index":773,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":150,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["changing",{"_index":1239,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["character",{"_index":1293,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["check",{"_index":668,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["checking",{"_index":739,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["checks",{"_index":161,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["chess",{"_index":889,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chessboard",{"_index":1372,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["child",{"_index":592,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["choose",{"_index":199,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["chrome",{"_index":84,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["circumstances",{"_index":622,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["class",{"_index":1021,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["classes",{"_index":748,"title":{},"body":{"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["clean",{"_index":238,"title":{},"body":{"injectables/DndService.html":{}}}],["clearer",{"_index":1425,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["clearly",{"_index":1387,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["click",{"_index":1057,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["client",{"_index":405,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["code",{"_index":172,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["codebase",{"_index":967,"title":{},"body":{"index.html":{}}}],["coll",{"_index":1567,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["collect",{"_index":1623,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collect((props",{"_index":1643,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collected",{"_index":173,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["color",{"_index":1315,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["colour",{"_index":1305,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["columns",{"_index":1360,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["combination",{"_index":1228,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["combine",{"_index":1649,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comes",{"_index":1642,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["commence",{"_index":1035,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["commit",{"_index":780,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["commits",{"_index":779,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["common",{"_index":230,"title":{},"body":{"injectables/DndService.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["community",{"_index":973,"title":{},"body":{"index.html":{}}}],["compared",{"_index":1593,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compatibility",{"_index":12,"title":{},"body":{"interfaces/AddSubscription.html":{},"additional-documentation/quickstart.html":{}}}],["compatible",{"_index":733,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["compilation",{"_index":62,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["complete",{"_index":1282,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["completely",{"_index":52,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["completions",{"_index":1118,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["complex",{"_index":826,"title":{},"body":{"index.html":{}}}],["component",{"_index":222,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["component's",{"_index":528,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["component.fireaction(monitor.getitem",{"_index":1601,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["component.source.gethandlerid",{"_index":1718,"title":{},"body":{"additional-documentation/testing.html":{}}}],["component.target.gethandlerid",{"_index":1719,"title":{},"body":{"additional-documentation/testing.html":{}}}],["componentfixture",{"_index":1700,"title":{},"body":{"additional-documentation/testing.html":{}}}],["components",{"_index":208,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["composing",{"_index":1627,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comprehensive",{"_index":870,"title":{},"body":{"index.html":{}}}],["comprehensively",{"_index":1109,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["compute",{"_index":1458,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["computed",{"_index":1517,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concept",{"_index":1620,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["concepts",{"_index":1032,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["conceptually",{"_index":1500,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concerned",{"_index":1327,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["configuration",{"_index":90,"title":{},"body":{"interfaces/BackendInput.html":{},"index.html":{}}}],["configure",{"_index":37,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"additional-documentation/testing.html":{}}}],["configuring",{"_index":48,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["confusing",{"_index":1497,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["confusion",{"_index":709,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["connect",{"_index":494,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect.connectdragsource",{"_index":1603,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview",{"_index":497,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview(elementornode",{"_index":501,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdragpreviewdragsource",{"_index":431,"title":{},"body":{"directives/DragPreviewDirective.html":{}}}],["connectdragsource",{"_index":498,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragsource(elementornode",{"_index":517,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdragsourcedragsource",{"_index":550,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["connectdroptarget",{"_index":700,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connectdroptarget(elementornode",{"_index":702,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connected",{"_index":271,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connecting",{"_index":1123,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection",{"_index":100,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection's",{"_index":1124,"title":{},"body":{"additional-documentation/guide.html":{}}}],["connection.unsubscribe",{"_index":225,"title":{},"body":{"injectables/DndService.html":{}}}],["connectionbase",{"_index":94,"title":{"interfaces/ConnectionBase.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["connectionbase.unsubscribe",{"_index":1634,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connections",{"_index":1121,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectors",{"_index":1661,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connects",{"_index":1657,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["consider",{"_index":1014,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["considered",{"_index":671,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["console.log('dropped",{"_index":1189,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["const",{"_index":507,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["constant",{"_index":1481,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants",{"_index":1490,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants.ts",{"_index":1483,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["construct",{"_index":1690,"title":{},"body":{"additional-documentation/testing.html":{}}}],["constructor",{"_index":1183,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["constructor(private",{"_index":1135,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["constructors",{"_index":244,"title":{},"body":{"injectables/DndService.html":{}}}],["consumers",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contain",{"_index":15,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["containercomponent",{"_index":1368,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["content",{"_index":576,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["context",{"_index":68,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"miscellaneous/variables.html":{}}}],["contributors",{"_index":968,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":1157,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["convenient",{"_index":113,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{}}}],["conventional",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["convert",{"_index":1378,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cookie",{"_index":936,"title":{},"body":{"index.html":{}}}],["cool",{"_index":1354,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord",{"_index":1376,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord.ts",{"_index":1377,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coordinate",{"_index":401,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/Offset.html":{}}}],["coordinates",{"_index":406,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["copy",{"_index":597,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["copying",{"_index":605,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["core",{"_index":77,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["core's",{"_index":147,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["cormacrelf",{"_index":952,"title":{},"body":{"index.html":{}}}],["corollary",{"_index":275,"title":{},"body":{"injectables/DndService.html":{}}}],["correctly",{"_index":1085,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["corresponds",{"_index":606,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["couples",{"_index":659,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["course",{"_index":1589,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["coverage",{"_index":792,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":231,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["createbackend",{"_index":1072,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["created",{"_index":1175,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["creates",{"_index":261,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["createtestbackend",{"_index":1697,"title":{},"body":{"additional-documentation/testing.html":{}}}],["creating",{"_index":1120,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["css",{"_index":842,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["current",{"_index":355,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["currently",{"_index":722,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["currentposition",{"_index":1436,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cursor",{"_index":486,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["custom",{"_index":321,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["customisations",{"_index":595,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["customise",{"_index":1186,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["customize",{"_index":1573,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cutter",{"_index":937,"title":{},"body":{"index.html":{}}}],["d",{"_index":1695,"title":{},"body":{"additional-documentation/testing.html":{}}}],["dan",{"_index":827,"title":{},"body":{"index.html":{}}}],["data",{"_index":285,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["data:image/png;base64",{"_index":1576,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dead",{"_index":1485,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["deadline",{"_index":942,"title":{},"body":{"index.html":{}}}],["debug",{"_index":72,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"miscellaneous/variables.html":{}}}],["debugging",{"_index":79,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["decisions",{"_index":1255,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["declarations",{"_index":213,"title":{},"body":{"modules/DndModule.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["declared",{"_index":1636,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorating",{"_index":1622,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorators",{"_index":1629,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decreased",{"_index":469,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["deep",{"_index":1322,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["default",{"_index":306,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["defer",{"_index":1677,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["define",{"_index":634,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["defined",{"_index":566,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["definitions",{"_index":1086,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["degradation",{"_index":699,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["deleting",{"_index":893,"title":{},"body":{"index.html":{}}}],["demo",{"_index":1108,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["demonstrations",{"_index":923,"title":{},"body":{"index.html":{}}}],["demos",{"_index":1596,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["depend",{"_index":1672,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dependencies",{"_index":814,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":1699,"title":{},"body":{"additional-documentation/testing.html":{}}}],["depending",{"_index":357,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["depends",{"_index":982,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":36,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["derive",{"_index":1235,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["describe",{"_index":1478,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["describe(mycomponent.name",{"_index":1704,"title":{},"body":{"additional-documentation/testing.html":{}}}],["described",{"_index":1682,"title":{},"body":{"additional-documentation/testing.html":{}}}],["describing",{"_index":648,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["description",{"_index":6,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}}}],["designed",{"_index":342,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["desirable",{"_index":473,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["desktop",{"_index":1058,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["desktops",{"_index":1059,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["destroy",{"_index":233,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["destroy.unsubscribe",{"_index":236,"title":{},"body":{"injectables/DndService.html":{}}}],["destroyed",{"_index":137,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["destroying",{"_index":1146,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["destructive",{"_index":611,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["details",{"_index":669,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/testing.html":{}}}],["detection",{"_index":690,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/testing.html":{}}}],["determine",{"_index":662,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["devices",{"_index":1055,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["diagramming",{"_index":909,"title":{},"body":{"index.html":{}}}],["diddrop",{"_index":563,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["difference",{"_index":1617,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["differences",{"_index":1590,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["different",{"_index":409,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["differently",{"_index":1706,"title":{},"body":{"additional-documentation/testing.html":{}}}],["difficult",{"_index":1537,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["directive",{"_index":274,"title":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}},"body":{"injectables/DndService.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["directives",{"_index":421,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["directly",{"_index":503,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["disappears",{"_index":1471,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["discover",{"_index":1212,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["discussed",{"_index":977,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["discussion",{"_index":730,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dispatched",{"_index":588,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["displacement",{"_index":759,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["display",{"_index":379,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["distinctuntilchanged",{"_index":160,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["div",{"_index":1332,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["divs",{"_index":1343,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dnd",{"_index":76,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["dnd's",{"_index":276,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dnd.dragsource(\"item",{"_index":1609,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dnd/core",{"_index":241,"title":{},"body":{"injectables/DndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["dnd/multi",{"_index":396,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["dnd/sortable",{"_index":839,"title":{},"body":{"index.html":{}}}],["dndmodule",{"_index":87,"title":{"modules/DndModule.html":{}},"body":{"interfaces/BackendInput.html":{},"modules/DndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["dndmodule.forroot",{"_index":1020,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["dndservice",{"_index":108,"title":{"injectables/DndService.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["dndservice#draglayer",{"_index":1132,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["dndservice#dragsource",{"_index":1129,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["dndservice#droptarget",{"_index":1131,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["dndservice.draglayer",{"_index":343,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dndservice.dragsource",{"_index":1594,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dndservice.droptarget(types",{"_index":129,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dock",{"_index":450,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["docs",{"_index":408,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["documentation",{"_index":793,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["documented",{"_index":777,"title":{},"body":{"changelog.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["doesn't",{"_index":484,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["doing",{"_index":658,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dom",{"_index":99,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["don't",{"_index":202,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["done",{"_index":1151,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["down",{"_index":903,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drag",{"_index":148,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["drag/drop",{"_index":885,"title":{},"body":{"index.html":{}}}],["drag/listen",{"_index":284,"title":{},"body":{"injectables/DndService.html":{}}}],["drag_drop_backend",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_debug_mode",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_factory",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_options",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_global_context",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_manager",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["dragdropmanager",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["draggable",{"_index":395,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragged",{"_index":351,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragging",{"_index":191,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["draggingclassapplied",{"_index":1707,"title":{},"body":{"additional-documentation/testing.html":{}}}],["draglayer",{"_index":256,"title":{"interfaces/DragLayer.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["draglayer(subscription",{"_index":259,"title":{},"body":{"injectables/DndService.html":{}}}],["draglayer.listen",{"_index":346,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["draglayermonitor",{"_index":348,"title":{"interfaces/DragLayerMonitor.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragpreview",{"_index":428,"title":{},"body":{"directives/DragPreviewDirective.html":{}}}],["dragpreview]=\"source",{"_index":1194,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewdirective",{"_index":420,"title":{"directives/DragPreviewDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewoptions",{"_index":430,"title":{"interfaces/DragPreviewOptions.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource",{"_index":257,"title":{"interfaces/DragSource.html":{}},"body":{"injectables/DndService.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource's",{"_index":561,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["dragsource(\"item",{"_index":1602,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource(type",{"_index":264,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.connectdragpreview",{"_index":1217,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource.listen",{"_index":1503,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.settype",{"_index":1678,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"itemsource",{"_index":1659,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"source",{"_index":1207,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcedecorator",{"_index":990,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcedirective",{"_index":547,"title":{"directives/DragSourceDirective.html":{}},"body":{"directives/DragSourceDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcefactory",{"_index":992,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcemonitor",{"_index":559,"title":{"interfaces/DragSourceMonitor.html":{}},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragsourcemonitor.id",{"_index":673,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dragsourcemonitor.isdragging",{"_index":1504,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dragsourceoptions",{"_index":518,"title":{"interfaces/DragSourceOptions.html":{}},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["dragsourcespec",{"_index":267,"title":{"interfaces/DragSourceSpec.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcespec.begindrag",{"_index":381,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dragsourcetype",{"_index":548,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["dragula",{"_index":941,"title":{},"body":{"index.html":{}}}],["draw",{"_index":911,"title":{},"body":{"index.html":{}}}],["drill",{"_index":902,"title":{},"body":{"index.html":{}}}],["drive",{"_index":1391,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["drop",{"_index":290,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["drop(monitor",{"_index":732,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["dropeffect",{"_index":596,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["dropped",{"_index":644,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropping",{"_index":117,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropresult",{"_index":268,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["drops",{"_index":1463,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptarget",{"_index":258,"title":{"interfaces/DropTarget.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptarget's",{"_index":718,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["droptarget(types",{"_index":301,"title":{},"body":{"injectables/DndService.html":{}}}],["droptarget.listen",{"_index":1550,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetdecorator",{"_index":993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetdirective",{"_index":704,"title":{"directives/DropTargetDirective.html":{}},"body":{"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["droptargetfactory",{"_index":994,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetmonitor",{"_index":716,"title":{"interfaces/DropTargetMonitor.html":{}},"body":{"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptargetmonitor.candrop",{"_index":1551,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetmonitor.isover",{"_index":1552,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec",{"_index":111,"title":{"interfaces/DropTargetSpec.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["droptargetspec.candrop",{"_index":1230,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec.drop",{"_index":1261,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargettype",{"_index":705,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["droptargettypes",{"_index":706,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["dt",{"_index":128,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dt.add(subj.pipe",{"_index":139,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dumb",{"_index":372,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duplication",{"_index":362,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duration",{"_index":120,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["during",{"_index":631,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dx",{"_index":1441,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dy",{"_index":1443,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dynamic",{"_index":295,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["dynamically",{"_index":522,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["e.g",{"_index":1201,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["each",{"_index":1033,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["earlier",{"_index":1549,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["easier",{"_index":541,"title":{},"body":{"interfaces/DragSource.html":{}}}],["easily",{"_index":504,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["easy",{"_index":224,"title":{},"body":{"injectables/DndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["editor",{"_index":1116,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["eee",{"_index":1225,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["effectively",{"_index":369,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["efficient",{"_index":1647,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["element",{"_index":272,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["element's",{"_index":1177,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["elementornode",{"_index":516,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["elementref",{"_index":1658,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["elementref.nativeelement",{"_index":506,"title":{},"body":{"interfaces/DragSource.html":{}}}],["elements",{"_index":331,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["elsewhere",{"_index":1390,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["emit",{"_index":1041,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["emits",{"_index":1486,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["empty",{"_index":483,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["emulate",{"_index":169,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["enable",{"_index":78,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["enabled",{"_index":1076,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enabled/disabled",{"_index":571,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["encapsulation",{"_index":1320,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["encountered",{"_index":1090,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enddrag",{"_index":579,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["enddrag(monitor",{"_index":664,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ends",{"_index":289,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["enough",{"_index":1324,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["enters",{"_index":859,"title":{},"body":{"index.html":{}}}],["entire",{"_index":1243,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["equality",{"_index":163,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["erasedto",{"_index":341,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ergonomic",{"_index":874,"title":{},"body":{"index.html":{}}}],["error",{"_index":1089,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["es6",{"_index":1669,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["especially",{"_index":1167,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["essentially",{"_index":153,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["etc",{"_index":1654,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["etcthen",{"_index":1184,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["even",{"_index":387,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["event",{"_index":578,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["events",{"_index":377,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["everything",{"_index":1161,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["exact",{"_index":1691,"title":{},"body":{"additional-documentation/testing.html":{}}}],["exactly",{"_index":1249,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["example",{"_index":58,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["examples",{"_index":364,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["except",{"_index":1475,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["execute",{"_index":1451,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["executing",{"_index":1448,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["exist",{"_index":210,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["existing",{"_index":313,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["exiting",{"_index":118,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["expect",{"_index":629,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["expect(draggingclassapplied()).tobefalsy",{"_index":1728,"title":{},"body":{"additional-documentation/testing.html":{}}}],["expect(draggingclassapplied()).tobetruthy",{"_index":1722,"title":{},"body":{"additional-documentation/testing.html":{}}}],["experience",{"_index":698,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["explicitly",{"_index":590,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["export",{"_index":59,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["exported",{"_index":1069,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["exports",{"_index":214,"title":{},"body":{"modules/DndModule.html":{},"additional-documentation/quickstart.html":{}}}],["express",{"_index":1374,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["expresses",{"_index":1229,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["extended",{"_index":729,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["extends",{"_index":18,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["extension",{"_index":83,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["extra",{"_index":633,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["fact",{"_index":950,"title":{},"body":{"index.html":{}}}],["fairly",{"_index":1588,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["false",{"_index":418,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["familiar",{"_index":1280,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["famous",{"_index":904,"title":{},"body":{"index.html":{}}}],["fancy",{"_index":1416,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["far",{"_index":1652,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["faster",{"_index":943,"title":{},"body":{"index.html":{}}}],["feature",{"_index":602,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["features",{"_index":840,"title":{},"body":{"index.html":{}}}],["few",{"_index":900,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["figure",{"_index":1542,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["find",{"_index":946,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["finished",{"_index":1284,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["fire",{"_index":206,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["fireaction",{"_index":1606,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fireaction(item",{"_index":1612,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fired",{"_index":1176,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["fires",{"_index":201,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["first",{"_index":1134,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fit",{"_index":850,"title":{},"body":{"index.html":{}}}],["five",{"_index":1630,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fixed",{"_index":358,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fixture",{"_index":1705,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.componentinstance",{"_index":1715,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.debugelement.query(by.css('.dragging",{"_index":1708,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.detectchanges",{"_index":1717,"title":{},"body":{"additional-documentation/testing.html":{}}}],["flag",{"_index":572,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["flight",{"_index":852,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["floating",{"_index":1480,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["flow",{"_index":848,"title":{},"body":{"index.html":{}}}],["flows",{"_index":335,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["fly",{"_index":538,"title":{},"body":{"interfaces/DragSource.html":{}}}],["folder",{"_index":899,"title":{},"body":{"index.html":{}}}],["follow",{"_index":332,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["following",{"_index":122,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["follows",{"_index":1192,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["font",{"_index":1295,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["foreground",{"_index":1306,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["forget",{"_index":229,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/quickstart.html":{}}}],["form",{"_index":1193,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["forroot",{"_index":70,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"modules/DndModule.html":{},"additional-documentation/quickstart.html":{}}}],["forroot(backendorbackendfactory",{"_index":216,"title":{},"body":{"modules/DndModule.html":{}}}],["forrootto",{"_index":1028,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["found",{"_index":964,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["four",{"_index":1283,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["free",{"_index":1648,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["frequently",{"_index":744,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["fresh",{"_index":1386,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["friendly",{"_index":851,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["full",{"_index":863,"title":{},"body":{"index.html":{}}}],["function",{"_index":63,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["functioning",{"_index":1632,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["functions",{"_index":397,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["funky",{"_index":1581,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["game",{"_index":1263,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice",{"_index":1393,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.canmoveknight",{"_index":1459,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.moveknight",{"_index":1426,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["general",{"_index":398,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide.html":{}}}],["generally",{"_index":1084,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["getclientoffset",{"_index":749,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdifferencefrominitialoffset",{"_index":750,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdropresult",{"_index":564,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["gethandlerid",{"_index":499,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["getinitialclientoffset",{"_index":751,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getinitialsourceclientoffset",{"_index":752,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitem",{"_index":753,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitemtype",{"_index":754,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["gets",{"_index":687,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["getsourceclientoffset",{"_index":755,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getstyle",{"_index":1312,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["getting",{"_index":772,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gifs",{"_index":924,"title":{},"body":{"index.html":{}}}],["github",{"_index":978,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["give",{"_index":1420,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["given",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gives",{"_index":1645,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["glance",{"_index":1499,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["global",{"_index":328,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["gme",{"_index":1534,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["go",{"_index":1384,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["goals",{"_index":855,"title":{},"body":{"index.html":{}}}],["going",{"_index":735,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["good",{"_index":251,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["grab",{"_index":1211,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["graphical",{"_index":917,"title":{},"body":{"index.html":{}}}],["green",{"_index":1546,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["greenplus",{"_index":642,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["grid",{"_index":1352,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["grouping",{"_index":185,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["groupings",{"_index":537,"title":{},"body":{"interfaces/DragSource.html":{}}}],["guidance",{"_index":1535,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["guide",{"_index":1049,"title":{"additional-documentation/guide.html":{}},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["guidelines",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["habit",{"_index":252,"title":{},"body":{"injectables/DndService.html":{}}}],["handle",{"_index":394,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["handled",{"_index":505,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["handler",{"_index":1454,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["handles",{"_index":1172,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["handlesquareclick",{"_index":1447,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick(pos",{"_index":1429,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hanging",{"_index":204,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["happen",{"_index":1474,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["happens",{"_index":886,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["happily",{"_index":168,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["hard",{"_index":656,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["having",{"_index":228,"title":{},"body":{"injectables/DndService.html":{}}}],["head",{"_index":1078,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["heavy",{"_index":1529,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["height",{"_index":1301,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["help",{"_index":972,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["helpful",{"_index":1253,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["here",{"_index":69,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["here's",{"_index":1423,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["hide",{"_index":480,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["high",{"_index":856,"title":{},"body":{"index.html":{}}}],["higher",{"_index":1618,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["highlighted",{"_index":1260,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hinders",{"_index":1242,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hint",{"_index":608,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["hoist",{"_index":286,"title":{},"body":{"injectables/DndService.html":{}}}],["hold",{"_index":1375,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hook",{"_index":298,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hooks",{"_index":1037,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["horizontal",{"_index":446,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["horse",{"_index":1582,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["host",{"_index":1331,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hover",{"_index":115,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["hover(monitor",{"_index":743,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["hovered",{"_index":726,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["hovering",{"_index":723,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hovers",{"_index":745,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["html",{"_index":1309,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["html5",{"_index":308,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["html5backend",{"_index":89,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["html5dropresult",{"_index":636,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["https",{"_index":1578,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["icon",{"_index":643,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["id",{"_index":385,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["idea",{"_index":660,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["identical",{"_index":1548,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["identifier",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1716,"title":{},"body":{"additional-documentation/testing.html":{}}}],["ie",{"_index":478,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["ie11",{"_index":557,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["illegal",{"_index":1452,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["illustrate",{"_index":1592,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["image",{"_index":316,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["imaginary",{"_index":1083,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imagine",{"_index":1666,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["img",{"_index":508,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.onload",{"_index":509,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.src",{"_index":511,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["immediate",{"_index":515,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["immediately",{"_index":459,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["implement",{"_index":881,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["implementation",{"_index":1246,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["implemented",{"_index":1056,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["implementing",{"_index":1269,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["import",{"_index":246,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["important",{"_index":388,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["importing",{"_index":1080,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imports",{"_index":1019,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["improvements",{"_index":976,"title":{},"body":{"index.html":{}}}],["include",{"_index":1031,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["includes",{"_index":1068,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["including",{"_index":400,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["incorporate",{"_index":1528,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["independent",{"_index":1369,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1536,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["indices",{"_index":1380,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["inferring",{"_index":621,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}}}],["information",{"_index":490,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["initial",{"_index":760,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["initialized",{"_index":1027,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["initiated",{"_index":594,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{}}}],["inject",{"_index":1029,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectable",{"_index":219,"title":{"injectables/DndService.html":{}},"body":{"coverage.html":{},"overview.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectables",{"_index":220,"title":{},"body":{"injectables/DndService.html":{}}}],["injected",{"_index":1624,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["injection",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["injectiontoken",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":853,"title":{},"body":{"index.html":{}}}],["input",{"_index":375,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inputs",{"_index":429,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["inside",{"_index":413,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inspired",{"_index":1038,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["install",{"_index":1694,"title":{},"body":{"additional-documentation/testing.html":{}}}],["installation",{"_index":832,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["instance",{"_index":1030,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["instantiate",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instead",{"_index":461,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["instructions",{"_index":1094,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["interaction",{"_index":1067,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["interactions",{"_index":882,"title":{},"body":{"index.html":{},"additional-documentation/testing.html":{}}}],["interactive",{"_index":1199,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["interactivity",{"_index":376,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["interest",{"_index":1585,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["interested",{"_index":1401,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["interesting",{"_index":1473,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"index.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["internally",{"_index":109,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["internals",{"_index":282,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["interpolate",{"_index":452,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["introducing",{"_index":1414,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["investigate",{"_index":1185,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["isblack",{"_index":1385,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["isdragging",{"_index":175,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["isdragging(monitor",{"_index":670,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["isdraggingobj",{"_index":1252,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["isdraggingplain",{"_index":1250,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["ish.ts",{"_index":767,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["isn't",{"_index":569,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isolate",{"_index":1686,"title":{},"body":{"additional-documentation/testing.html":{}}}],["isolation",{"_index":1683,"title":{},"body":{"additional-documentation/testing.html":{}}}],["isover",{"_index":177,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isover(options",{"_index":719,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["issue",{"_index":971,"title":{},"body":{"index.html":{}}}],["issues",{"_index":962,"title":{},"body":{"index.html":{}}}],["it's",{"_index":649,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["it('should",{"_index":1720,"title":{},"body":{"additional-documentation/testing.html":{}}}],["item",{"_index":260,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["item's",{"_index":761,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["items",{"_index":293,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["itemsource",{"_index":1608,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemsourcespec",{"_index":1597,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemtypes",{"_index":1484,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itemtypes.knight",{"_index":1487,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itself",{"_index":1245,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["javascript",{"_index":647,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["jest",{"_index":1680,"title":{},"body":{"additional-documentation/testing.html":{}}}],["job",{"_index":1195,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["jones",{"_index":1181,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["js",{"_index":617,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["jsx",{"_index":1655,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["kanban",{"_index":681,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keep",{"_index":573,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["key",{"_index":640,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keys",{"_index":1248,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["kinds",{"_index":1066,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["knight",{"_index":1264,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knight's",{"_index":1400,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightcomponent",{"_index":1270,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition",{"_index":1388,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition$|async",{"_index":1418,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knights",{"_index":1479,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightsource",{"_index":1492,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["know",{"_index":652,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["kp",{"_index":1439,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["laid",{"_index":1234,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["large",{"_index":1164,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["largely",{"_index":866,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["last",{"_index":583,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lastly",{"_index":1572,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["later",{"_index":676,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["layer",{"_index":325,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["layers",{"_index":368,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/testing.html":{}}}],["lazy",{"_index":1024,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["leaked",{"_index":254,"title":{},"body":{"injectables/DndService.html":{}}}],["learn",{"_index":458,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["learnable",{"_index":1539,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["learning",{"_index":944,"title":{},"body":{"index.html":{}}}],["leave",{"_index":203,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["left",{"_index":451,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["let's",{"_index":1346,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lets",{"_index":80,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["level",{"_index":879,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1466,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["library",{"_index":934,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["license",{"_index":979,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":297,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lifetime",{"_index":300,"title":{},"body":{"injectables/DndService.html":{}}}],["lifting",{"_index":1530,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lightgoldenrodyellow",{"_index":1226,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["lightweight",{"_index":1396,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["limitations",{"_index":312,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["limitedsupplyofpaper",{"_index":1102,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["line",{"_index":1300,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["linearly",{"_index":453,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["liners",{"_index":1105,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["lines",{"_index":1574,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["link",{"_index":599,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/translating-react-code.html":{}}}],["linked",{"_index":1330,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["links",{"_index":912,"title":{},"body":{"index.html":{}}}],["list",{"_index":493,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["listen",{"_index":101,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen()/subscribe",{"_index":110,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["listen(m",{"_index":194,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen(mapto",{"_index":142,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["listens",{"_index":1687,"title":{},"body":{"additional-documentation/testing.html":{}}}],["lists",{"_index":680,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["literal",{"_index":720,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["little",{"_index":1495,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["live",{"_index":1287,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lives",{"_index":846,"title":{},"body":{"index.html":{}}}],["load",{"_index":1214,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["loaded",{"_index":1025,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["log",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":574,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["long",{"_index":1575,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["longer",{"_index":209,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["look",{"_index":1046,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["looking",{"_index":1145,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["looks",{"_index":1501,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["loops",{"_index":1348,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lot",{"_index":1044,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lots",{"_index":226,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lower",{"_index":878,"title":{},"body":{"index.html":{}}}],["luna",{"_index":922,"title":{},"body":{"index.html":{}}}],["m.candrop",{"_index":1560,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["m.candrop());what",{"_index":1233,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["m.isdragging",{"_index":195,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["m.isover",{"_index":1232,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["macos",{"_index":895,"title":{},"body":{"index.html":{}}}],["made",{"_index":514,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{}}}],["maintain",{"_index":1154,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["maintaining",{"_index":954,"title":{},"body":{"index.html":{}}}],["maintains",{"_index":146,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["make",{"_index":344,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["makes",{"_index":1512,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["making",{"_index":694,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["managed",{"_index":1633,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["manager",{"_index":67,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/testing.html":{}}}],["manager.getbackend",{"_index":1713,"title":{},"body":{"additional-documentation/testing.html":{}}}],["mandated",{"_index":1591,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["manually",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["many",{"_index":304,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["map",{"_index":1558,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["mapto",{"_index":196,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["marker",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":448,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["matching",{"_index":32,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["math.abs(dx",{"_index":1445,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.abs(dy",{"_index":1446,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.floor(i",{"_index":1383,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["maximally",{"_index":873,"title":{},"body":{"index.html":{}}}],["maybe",{"_index":232,"title":{},"body":{"injectables/DndService.html":{}}}],["mcfly",{"_index":1182,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["mean",{"_index":1342,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["meaning",{"_index":884,"title":{},"body":{"index.html":{}}}],["means",{"_index":449,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["merging",{"_index":898,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":426,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["method",{"_index":17,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{}}}],["methods",{"_index":20,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["midflight",{"_index":318,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["minimal",{"_index":651,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["miscellaneous",{"_index":987,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":981,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":1054,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mode",{"_index":50,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":531,"title":{},"body":{"interfaces/DragSource.html":{}}}],["modern",{"_index":1355,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modify",{"_index":667,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["module",{"_index":211,"title":{"modules/DndModule.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["module's",{"_index":1303,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modulenamemapper",{"_index":1681,"title":{},"body":{"additional-documentation/testing.html":{}}}],["modules",{"_index":212,"title":{"modules.html":{}},"body":{"modules/DndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{}}}],["modulewithproviders",{"_index":218,"title":{},"body":{"modules/DndModule.html":{}}}],["moment",{"_index":1455,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["monitor",{"_index":130,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.candrop",{"_index":180,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.diddrop",{"_index":1107,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.getdropresult",{"_index":630,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["monitor.getitem",{"_index":618,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["monitor.isdragging",{"_index":176,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.isover",{"_index":178,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.ts",{"_index":412,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["monitorbase",{"_index":414,"title":{"interfaces/MonitorBase.html":{}},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitoring",{"_index":1126,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitors",{"_index":1237,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["moot",{"_index":1638,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["more",{"_index":54,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["mounted",{"_index":688,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mouse",{"_index":333,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["movable",{"_index":890,"title":{},"body":{"index.html":{}}}],["move",{"_index":598,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["moved",{"_index":339,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moveknight",{"_index":1465,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moveknight(to",{"_index":1407,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moves",{"_index":340,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moving",{"_index":678,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["much",{"_index":1424,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["multi",{"_index":10,"title":{},"body":{"interfaces/AddSubscription.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend",{"_index":93,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend(html5totouch",{"_index":1073,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["multiple",{"_index":1628,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mutable",{"_index":929,"title":{},"body":{"index.html":{}}}],["mutate",{"_index":841,"title":{},"body":{"index.html":{}}}],["mybackend",{"_index":1088,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mybackendfactory",{"_index":64,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["mycomponent",{"_index":1604,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["mydraggeditemtype",{"_index":626,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mydropresult",{"_index":637,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["name",{"_index":27,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["named",{"_index":56,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["neat",{"_index":1149,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["necessarily",{"_index":932,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":47,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"index.html":{}}}],["need",{"_index":479,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["nested",{"_index":589,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["never",{"_index":1244,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["new",{"_index":41,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["next",{"_index":462,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ng",{"_index":240,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ng2",{"_index":940,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":1173,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif",{"_index":184,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif=\"aaa",{"_index":1421,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngmodule",{"_index":1018,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["ngonchanges",{"_index":530,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngondestroy",{"_index":200,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ngoninit",{"_index":529,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngrx",{"_index":1397,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngrx/store",{"_index":742,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["ngstyle",{"_index":1317,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngswitch",{"_index":359,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ngzone.run",{"_index":697,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["noble",{"_index":1431,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["node",{"_index":314,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{}}}],["nodes",{"_index":913,"title":{},"body":{"index.html":{}}}],["nohtml5preview",{"_index":549,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["non",{"_index":711,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["none",{"_index":600,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notable",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["notation",{"_index":1640,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["note",{"_index":567,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nothing",{"_index":734,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notice",{"_index":1340,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["noticed",{"_index":1065,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["notified",{"_index":151,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notifies",{"_index":665,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["notifying",{"_index":288,"title":{},"body":{"injectables/DndService.html":{}}}],["now",{"_index":353,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["null",{"_index":192,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["number",{"_index":438,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["o",{"_index":145,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["object",{"_index":262,"title":{},"body":{"injectables/DndService.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["objects",{"_index":166,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable",{"_index":197,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable.combinelatest",{"_index":1650,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["observable.map",{"_index":154,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["observables",{"_index":1554,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["observe",{"_index":1553,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["obvious",{"_index":1538,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["occur",{"_index":465,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offer",{"_index":1133,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["offers",{"_index":1043,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["offset",{"_index":443,"title":{"interfaces/Offset.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["offsetx",{"_index":436,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offsety",{"_index":437,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["once",{"_index":237,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["one",{"_index":155,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ones",{"_index":1113,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["onload",{"_index":1215,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["onpush",{"_index":865,"title":{},"body":{"index.html":{}}}],["op",{"_index":1693,"title":{},"body":{"additional-documentation/testing.html":{}}}],["opacity",{"_index":470,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["operation",{"_index":416,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["operations",{"_index":1036,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["opposed",{"_index":727,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["optimisation",{"_index":1236,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimise",{"_index":1240,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimises",{"_index":1247,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimization",{"_index":157,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["option",{"_index":607,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["optional",{"_index":29,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["optionally",{"_index":585,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["options",{"_index":44,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTargetMonitor.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["optionshere",{"_index":1095,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["order",{"_index":1619,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["original",{"_index":481,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["others",{"_index":829,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":419,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["out",{"_index":831,"title":{},"body":{"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["output",{"_index":158,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["outside",{"_index":581,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["over",{"_index":363,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["overall",{"_index":1208,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["overlay",{"_index":1555,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overlaystyle",{"_index":1565,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["override",{"_index":672,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["overrides",{"_index":591,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["overview",{"_index":984,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":593,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["owner's",{"_index":565,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["package",{"_index":787,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packages",{"_index":838,"title":{},"body":{"index.html":{}}}],["page",{"_index":365,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["papercount",{"_index":1101,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["parameter",{"_index":243,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["parent",{"_index":534,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["parentid",{"_index":532,"title":{},"body":{"interfaces/DragSource.html":{}}}],["part",{"_index":1048,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["particular",{"_index":492,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["particularly",{"_index":1259,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["parts",{"_index":1527,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["pass",{"_index":296,"title":{},"body":{"injectables/DndService.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["passed",{"_index":614,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["paste",{"_index":1615,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pattern",{"_index":45,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["patterns",{"_index":1662,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["paying",{"_index":1337,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["peer",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":360,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["perfectly",{"_index":1518,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["perform",{"_index":320,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{}}}],["performance",{"_index":691,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pick",{"_index":650,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["picked",{"_index":1509,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["piece",{"_index":366,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pieces",{"_index":891,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["pipe",{"_index":1221,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipeline",{"_index":921,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":1254,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["place",{"_index":666,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["placed",{"_index":1370,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["places",{"_index":741,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["placing",{"_index":1373,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plain",{"_index":88,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["planning",{"_index":389,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["play",{"_index":1286,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["players",{"_index":1510,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plenty",{"_index":935,"title":{},"body":{"index.html":{}}}],["plural",{"_index":712,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["point",{"_index":1336,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pointer",{"_index":721,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["poor",{"_index":1170,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["populated",{"_index":1676,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["posing",{"_index":1196,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["position",{"_index":356,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["possibile",{"_index":410,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["possible",{"_index":867,"title":{},"body":{"index.html":{}}}],["potential",{"_index":975,"title":{},"body":{"index.html":{}}}],["power",{"_index":948,"title":{},"body":{"index.html":{}}}],["powered",{"_index":830,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":939,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["practice",{"_index":386,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["precisely",{"_index":861,"title":{},"body":{"index.html":{}}}],["prefer",{"_index":39,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["presents",{"_index":1587,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["preserves",{"_index":1522,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pressed",{"_index":641,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["prevent",{"_index":620,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["preview",{"_index":310,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["previews",{"_index":393,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["previously",{"_index":524,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{}}}],["primary",{"_index":1621,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["private",{"_index":1533,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["probably",{"_index":182,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["problem",{"_index":970,"title":{},"body":{"index.html":{}}}],["problems",{"_index":1062,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["procedure",{"_index":1547,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["process",{"_index":1516,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["produced",{"_index":294,"title":{},"body":{"injectables/DndService.html":{}}}],["product",{"_index":1285,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["program",{"_index":916,"title":{},"body":{"index.html":{}}}],["progress",{"_index":417,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["project",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":764,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["properties",{"_index":71,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["property",{"_index":526,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["props",{"_index":1598,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.someproperty",{"_index":1600,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.type",{"_index":1665,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["prospective",{"_index":1435,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["provide",{"_index":112,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["provides",{"_index":391,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["providing",{"_index":86,"title":{},"body":{"interfaces/BackendInput.html":{}}}],["public",{"_index":255,"title":{},"body":{"injectables/DndService.html":{}}}],["pulls",{"_index":383,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["purely",{"_index":373,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["put",{"_index":654,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["queries",{"_index":279,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["query",{"_index":918,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["quick",{"_index":1595,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["quickstart",{"_index":835,"title":{"additional-documentation/quickstart.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["quite",{"_index":938,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["rapidly",{"_index":1238,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["rare",{"_index":475,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["rarely",{"_index":472,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["re",{"_index":858,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["react",{"_index":170,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["react.component",{"_index":1605,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["react/react",{"_index":1614,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["read",{"_index":407,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reading",{"_index":1268,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["real",{"_index":1122,"title":{},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["really",{"_index":1341,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rears",{"_index":1077,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reasons",{"_index":692,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["received",{"_index":737,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["recent",{"_index":1405,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["recently",{"_index":1724,"title":{},"body":{"additional-documentation/testing.html":{}}}],["recognises",{"_index":635,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["recommended",{"_index":1163,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["recorded",{"_index":584,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["rectangle",{"_index":1179,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["red",{"_index":1545,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["reduce",{"_index":361,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["redundant",{"_index":1415,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["redux",{"_index":82,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["refer",{"_index":496,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["reference",{"_index":162,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["refers",{"_index":1110,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reflected",{"_index":471,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["registered",{"_index":292,"title":{},"body":{"injectables/DndService.html":{}}}],["registers",{"_index":1034,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["regular",{"_index":1112,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["related",{"_index":491,"title":{},"body":{"interfaces/DragSource.html":{},"index.html":{}}}],["relative",{"_index":444,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["released",{"_index":980,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":425,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["remember",{"_index":1127,"title":{},"body":{"additional-documentation/guide.html":{}}}],["reminded",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":1427,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["renamed",{"_index":1653,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["renaming",{"_index":1081,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["render",{"_index":330,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["rendered",{"_index":337,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/testing.html":{}}}],["rendering",{"_index":307,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["renders",{"_index":1347,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["repeat(8",{"_index":1361,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replace",{"_index":1525,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replacing",{"_index":1453,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replay",{"_index":1404,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replicate",{"_index":575,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["represent",{"_index":98,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["representing",{"_index":582,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["represents",{"_index":7,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/DndService.html":{},"interfaces/DropTarget.html":{}}}],["require",{"_index":121,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/testing.html":{}}}],["required",{"_index":646,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["requires",{"_index":1070,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolve",{"_index":1119,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolving",{"_index":1091,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resorting",{"_index":482,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["respectively",{"_index":1040,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["respond",{"_index":1125,"title":{},"body":{"additional-documentation/guide.html":{}}}],["responsible",{"_index":1271,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rest",{"_index":1674,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["result",{"_index":31,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["result.dropeffect",{"_index":638,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["resulting",{"_index":1219,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["results",{"_index":33,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["resurrected",{"_index":677,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["retain",{"_index":683,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["return",{"_index":66,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["returned",{"_index":136,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["returning",{"_index":586,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["returns",{"_index":30,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reusable",{"_index":768,"title":{},"body":{"interfaces/Offset.html":{}}}],["reuse",{"_index":378,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rgba(0,0,0,0",{"_index":1569,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["right",{"_index":454,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["root",{"_index":765,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{}}}],["rows",{"_index":1363,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ruin",{"_index":1519,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rules",{"_index":892,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["run",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["runs",{"_index":134,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["rxjs",{"_index":8,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"dependencies.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rxjs/operators",{"_index":1559,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sake",{"_index":1365,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["same",{"_index":23,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sane",{"_index":1039,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["save",{"_index":1218,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scalars",{"_index":164,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["scope",{"_index":1413,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["screen",{"_index":1202,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshot",{"_index":315,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshotting",{"_index":464,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["seamlessly",{"_index":1063,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["seconds",{"_index":901,"title":{},"body":{"index.html":{}}}],["section",{"_index":1304,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["see",{"_index":73,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["seem",{"_index":1467,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["seen",{"_index":1541,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["selecting",{"_index":1204,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["selector",{"_index":427,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sense",{"_index":1344,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sensible",{"_index":474,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["separate",{"_index":370,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["separated",{"_index":1456,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["serves",{"_index":1482,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["service",{"_index":1409,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["set",{"_index":278,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["setdroptargettype(t",{"_index":714,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["setting",{"_index":552,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["settype",{"_index":500,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["settype(type",{"_index":521,"title":{},"body":{"interfaces/DragSource.html":{}}}],["settype/settypes",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settypedragsource",{"_index":555,"title":{},"body":{"directives/DragSourceDirective.html":{},"miscellaneous/variables.html":{}}}],["settypes",{"_index":701,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["settypes(type",{"_index":703,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["settypesdroptarget",{"_index":713,"title":{},"body":{"directives/DropTargetDirective.html":{},"miscellaneous/variables.html":{}}}],["shallow",{"_index":724,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["shallowequal",{"_index":165,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["shortcut",{"_index":551,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["shorthand",{"_index":1104,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["shouldn't",{"_index":693,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{}}}],["show",{"_index":1117,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["showoverlay",{"_index":1561,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["shows",{"_index":604,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["sick",{"_index":953,"title":{},"body":{"index.html":{}}}],["sidebar",{"_index":1050,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["similar",{"_index":674,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["simple",{"_index":221,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["simpler",{"_index":738,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["simply",{"_index":245,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["simulate",{"_index":519,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["simulation",{"_index":1688,"title":{},"body":{"additional-documentation/testing.html":{}}}],["single",{"_index":1166,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["situations",{"_index":1153,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sixtyfour",{"_index":1349,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["size",{"_index":1298,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sized",{"_index":1169,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sizes",{"_index":447,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["slightly",{"_index":1496,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["small",{"_index":156,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["smaller",{"_index":1198,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["smart",{"_index":371,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["solid",{"_index":1359,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solution",{"_index":1412,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solutions",{"_index":875,"title":{},"body":{"index.html":{}}}],["solve",{"_index":1061,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somebackend",{"_index":43,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["somedragsourceconnection.connectdragpreview(img",{"_index":1216,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["someimaginarybackendwithnamedexports",{"_index":1082,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["someone",{"_index":1540,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["someproperty",{"_index":1599,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["something",{"_index":349,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sometimes",{"_index":319,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["somewhere",{"_index":384,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sortable",{"_index":928,"title":{},"body":{"index.html":{}}}],["source",{"_index":269,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["source's",{"_index":740,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["sources",{"_index":303,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["space",{"_index":1325,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["span",{"_index":1291,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spec",{"_index":125,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["spec.hover",{"_index":132,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["spec.hover(monitor",{"_index":133,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["special",{"_index":326,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["specific",{"_index":883,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specification.ts",{"_index":613,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["specifics",{"_index":1051,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["specified",{"_index":119,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["specifies",{"_index":442,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["specify",{"_index":424,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specifying",{"_index":603,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["specs",{"_index":1100,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["spirit",{"_index":1543,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spot",{"_index":338,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["square",{"_index":1275,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponent",{"_index":1272,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponents",{"_index":1457,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squares",{"_index":1278,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["src/.../tokens.ts",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../type",{"_index":995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrappers.ts",{"_index":991,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/connection",{"_index":95,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["src/connector.service.ts",{"_index":5,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/DndService.html":{},"coverage.html":{}}}],["src/connectors.ts",{"_index":432,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["src/dnd.directive.ts",{"_index":422,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["src/dnd.module.ts",{"_index":35,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/DndModule.html":{},"coverage.html":{}}}],["src/drag",{"_index":612,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{}}}],["src/drop",{"_index":728,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["src/layer",{"_index":411,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"coverage.html":{}}}],["src/monitor",{"_index":746,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["src/source",{"_index":560,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"coverage.html":{}}}],["src/target",{"_index":717,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["src/tokens.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/type",{"_index":766,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/wrappers.ts",{"_index":996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stage",{"_index":1515,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["stamping",{"_index":896,"title":{},"body":{"index.html":{}}}],["standard",{"_index":13,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["start",{"_index":336,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["started",{"_index":352,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{}}}],["starts",{"_index":460,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["state",{"_index":149,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["statements",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":215,"title":{},"body":{"modules/DndModule.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["statically",{"_index":1092,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["stationary",{"_index":1502,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["step",{"_index":1472,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["steps",{"_index":1045,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["still",{"_index":1371,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["store",{"_index":1136,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["strange",{"_index":1147,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["strategy",{"_index":1460,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["strictly",{"_index":725,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"index.html":{}}}],["string",{"_index":265,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["strings",{"_index":1668,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["string|symbol",{"_index":1671,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["strong",{"_index":624,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["structure",{"_index":1171,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["struggle",{"_index":957,"title":{},"body":{"index.html":{}}}],["style",{"_index":171,"title":{},"body":{"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["styles",{"_index":1294,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["styling",{"_index":468,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["sub",{"_index":837,"title":{},"body":{"index.html":{}}}],["subj",{"_index":126,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subj.next",{"_index":131,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subject",{"_index":127,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["subs",{"_index":1158,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscribe",{"_index":193,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscribe(callback",{"_index":140,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscriber",{"_index":327,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["subscribers",{"_index":1406,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["subscribes",{"_index":1646,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["subscribing",{"_index":489,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription",{"_index":9,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription#add",{"_index":24,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["subscription.add",{"_index":104,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscription.add(conn",{"_index":1156,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscriptionlike",{"_index":14,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["subscriptions",{"_index":186,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["successful",{"_index":1464,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["such",{"_index":476,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["suffice",{"_index":309,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["sufficient",{"_index":663,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["sufficiently",{"_index":1114,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["superpowers",{"_index":933,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":382,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"miscellaneous/variables.html":{}}}],["supplies",{"_index":1644,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["supply",{"_index":1664,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["supplying",{"_index":1684,"title":{},"body":{"additional-documentation/testing.html":{}}}],["support",{"_index":485,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["supports",{"_index":242,"title":{},"body":{"injectables/DndService.html":{}}}],["sure",{"_index":345,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["switch",{"_index":1064,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["symbol",{"_index":266,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["symbols",{"_index":1670,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["syntax",{"_index":1099,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["t",{"_index":715,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["table",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1308,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["take",{"_index":862,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["target",{"_index":247,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["target(s",{"_index":1725,"title":{},"body":{"additional-documentation/testing.html":{}}}],["targets",{"_index":291,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["taste",{"_index":949,"title":{},"body":{"index.html":{}}}],["tear",{"_index":1137,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["teardown",{"_index":141,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["teardownlogic",{"_index":22,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["technically",{"_index":686,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["tedious",{"_index":227,"title":{},"body":{"injectables/DndService.html":{}}}],["tell",{"_index":1498,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["template",{"_index":188,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"directives/DropTargetDirective.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["template's",{"_index":1656,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["templates",{"_index":844,"title":{},"body":{"index.html":{}}}],["tempted",{"_index":653,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ten",{"_index":1152,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["terms",{"_index":1651,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["test",{"_index":580,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/testing.html":{}}}],["testable",{"_index":1685,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbackend",{"_index":1698,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed",{"_index":1701,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.configuretestingmodule",{"_index":1710,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.createcomponent(mycomponent",{"_index":1714,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.get(drag_drop_manager",{"_index":1712,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testing",{"_index":520,"title":{"additional-documentation/testing.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/testing.html":{}}}],["tests",{"_index":1692,"title":{},"body":{"additional-documentation/testing.html":{}}}],["text",{"_index":1205,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["that's",{"_index":495,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/quickstart.html":{}}}],["there's",{"_index":960,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":1637,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["thing",{"_index":959,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["things",{"_index":877,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["think",{"_index":963,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.black",{"_index":1313,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.cat.id",{"_index":1139,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.collected$.pipe(map(c",{"_index":1562,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.collected$.pipe(map(coll",{"_index":1566,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.currentposition",{"_index":1438,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.destroy",{"_index":249,"title":{},"body":{"injectables/DndService.html":{}}}],["this.destroy.add(xxx.subscribe",{"_index":234,"title":{},"body":{"injectables/DndService.html":{}}}],["this.destroy.unsubscribe",{"_index":250,"title":{},"body":{"injectables/DndService.html":{}}}],["this.dnd.dragsource",{"_index":627,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"cat",{"_index":1138,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"dragme",{"_index":1180,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.dragsource(\"paper",{"_index":1103,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.dnd.dragsource(\"test",{"_index":1729,"title":{},"body":{"additional-documentation/testing.html":{}}}],["this.dnd.dragsource(itemtypes.knight",{"_index":1493,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.dnd.dragsource(null",{"_index":533,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.dnd.droptarget",{"_index":248,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{}}}],["this.dnd.droptarget(\"cat",{"_index":1227,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["this.dnd.droptarget(\"dragme",{"_index":1188,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.droptarget(\"test",{"_index":1730,"title":{},"body":{"additional-documentation/testing.html":{}}}],["this.dnd.droptarget([\"cat",{"_index":1140,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.droptarget(itemtypes.knight",{"_index":1526,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.fireaction(monitor.getitem",{"_index":1610,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.game.canmoveknight(pos",{"_index":1449,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.canmoveknight(this.position",{"_index":1531,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.knightposition",{"_index":1410,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(pos",{"_index":1430,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(this.position",{"_index":1532,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.id",{"_index":628,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["this.itemsource.destroy",{"_index":1613,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.itemsource.listen(monitor",{"_index":1611,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.knightposition$.next(to",{"_index":1408,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightposition$.subscribe(kp",{"_index":1437,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.connectdragpreview(img",{"_index":1580,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.listen(monitor",{"_index":1505,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.unsubscribe",{"_index":1494,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.layer.unsubscribe",{"_index":1148,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.method",{"_index":1097,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.model.parentid.tostring",{"_index":540,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.notation",{"_index":1641,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.papercount",{"_index":1106,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.position",{"_index":1524,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.props",{"_index":1607,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.someproperty",{"_index":577,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["this.source.connectdragpreview(img",{"_index":510,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.listen(m",{"_index":1251,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/testing.html":{}}}],["this.source.settype(t",{"_index":545,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.unsubscribe",{"_index":1142,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["this.subs",{"_index":1159,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.add(myservice.subscribe",{"_index":1160,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.unsubscribe",{"_index":1162,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.target.listen(m",{"_index":1231,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.target.listen(monitor",{"_index":174,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["this.target.settype(\"parent_",{"_index":539,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.settype(this.type",{"_index":536,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.unsubscribe",{"_index":1143,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["those",{"_index":152,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["though",{"_index":685,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["three",{"_index":1128,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["through",{"_index":159,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["throw",{"_index":1428,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tick",{"_index":463,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["tie",{"_index":299,"title":{},"body":{"injectables/DndService.html":{}}}],["time",{"_index":399,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["timely",{"_index":402,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["times",{"_index":281,"title":{},"body":{"injectables/DndService.html":{},"index.html":{}}}],["tiny",{"_index":1262,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tmonitor",{"_index":143,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["to.x",{"_index":1442,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["to.y",{"_index":1444,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["token",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["told",{"_index":535,"title":{},"body":{"interfaces/DragSource.html":{}}}],["tons",{"_index":871,"title":{},"body":{"index.html":{}}}],["tool",{"_index":910,"title":{},"body":{"index.html":{}}}],["toolkit",{"_index":824,"title":{},"body":{"index.html":{}}}],["top",{"_index":456,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["touch",{"_index":1016,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["touchbackend",{"_index":92,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["touching",{"_index":1203,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["traditional",{"_index":888,"title":{},"body":{"index.html":{}}}],["transit",{"_index":763,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["translate",{"_index":868,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translated",{"_index":445,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["translating",{"_index":869,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translation",{"_index":1265,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["transparent",{"_index":1507,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trapped",{"_index":1392,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trash",{"_index":894,"title":{},"body":{"index.html":{}}}],["trello.com",{"_index":906,"title":{},"body":{"index.html":{}}}],["trick",{"_index":1417,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["troubleshooting",{"_index":1074,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["true",{"_index":415,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["truth",{"_index":845,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["truthy",{"_index":1419,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["try",{"_index":655,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["trying",{"_index":1689,"title":{},"body":{"additional-documentation/testing.html":{}}}],["tslib",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1461,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["turning",{"_index":1323,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tutorial",{"_index":836,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["two",{"_index":615,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type",{"_index":28,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type(s",{"_index":1667,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["type(t",{"_index":544,"title":{},"body":{"interfaces/DragSource.html":{}}}],["type_dynamic",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":988,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":523,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["typeerror",{"_index":1075,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["typeortypearray",{"_index":302,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"miscellaneous/typealiases.html":{}}}],["types",{"_index":124,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["types.ts",{"_index":96,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["typescript",{"_index":619,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["typical",{"_index":1625,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["typically",{"_index":329,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["typing",{"_index":625,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["typo",{"_index":708,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["ui",{"_index":1200,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ultra",{"_index":1395,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["undefined",{"_index":1079,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["under",{"_index":354,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["underlying",{"_index":1523,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["understand",{"_index":542,"title":{},"body":{"interfaces/DragSource.html":{}}}],["understandable",{"_index":1586,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["unicode",{"_index":1292,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unidirectional",{"_index":847,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1190,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["unlike",{"_index":1403,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unmounted",{"_index":675,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["unnecessary",{"_index":53,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["unsubscribe",{"_index":102,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["unsubscribed",{"_index":513,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["unsubscribing",{"_index":223,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["until",{"_index":135,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["unwanted",{"_index":1206,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["up",{"_index":239,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["update",{"_index":525,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["updated",{"_index":403,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["updates",{"_index":1241,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["url",{"_index":1577,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["urls",{"_index":1579,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["usable",{"_index":1258,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["usage",{"_index":1679,"title":{},"body":{"additional-documentation/testing.html":{}}}],["use",{"_index":60,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["used",{"_index":46,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["useful",{"_index":105,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["user",{"_index":609,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["users",{"_index":956,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["uses",{"_index":908,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["using",{"_index":40,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["usually",{"_index":502,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["valid",{"_index":1544,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["value",{"_index":487,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["values",{"_index":931,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["vanish",{"_index":1476,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["variable",{"_index":189,"title":{},"body":{"interfaces/ConnectionBase.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["variables",{"_index":997,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variably",{"_index":1168,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["vector",{"_index":758,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["version",{"_index":11,"title":{},"body":{"interfaces/AddSubscription.html":{},"directives/DropTargetDirective.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vertical",{"_index":455,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["very",{"_index":570,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["via",{"_index":138,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["view",{"_index":1319,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["viewport",{"_index":757,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["visible",{"_index":843,"title":{},"body":{"index.html":{}}}],["visual",{"_index":920,"title":{},"body":{"index.html":{}}}],["visuals",{"_index":374,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["void",{"_index":144,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{}}}],["voil",{"_index":1450,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["vs",{"_index":1111,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["vue",{"_index":961,"title":{},"body":{"index.html":{}}}],["wait",{"_index":1213,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["want",{"_index":183,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wanting",{"_index":947,"title":{},"body":{"index.html":{}}}],["warned",{"_index":945,"title":{},"body":{"index.html":{}}}],["watching",{"_index":955,"title":{},"body":{"index.html":{}}}],["way",{"_index":1026,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ways",{"_index":1155,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["we'll",{"_index":1289,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["we're",{"_index":1150,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["wealth",{"_index":969,"title":{},"body":{"index.html":{}}}],["web",{"_index":1583,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["weight",{"_index":1296,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["weird",{"_index":1469,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["well",{"_index":1017,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["what's",{"_index":1488,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whatever",{"_index":1307,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whether",{"_index":75,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["white",{"_index":1274,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whole",{"_index":1174,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["width",{"_index":1333,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wish",{"_index":527,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["within",{"_index":1187,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["without",{"_index":116,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["won't",{"_index":488,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["work",{"_index":477,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["works",{"_index":854,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["worth",{"_index":1267,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wrap",{"_index":1353,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper",{"_index":1521,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper(dndservice",{"_index":123,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrappers",{"_index":107,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrapping",{"_index":1356,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["write",{"_index":543,"title":{},"body":{"interfaces/DragSource.html":{}}}],["writing",{"_index":106,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["written",{"_index":872,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["x",{"_index":770,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["x,y",{"_index":756,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["xy",{"_index":769,"title":{},"body":{"interfaces/Offset.html":{}}}],["xy(i",{"_index":1381,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["y",{"_index":771,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["yarn",{"_index":833,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["yellow",{"_index":1570,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yes",{"_index":263,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTargetMonitor.html":{}}}],["you'd",{"_index":1489,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'll",{"_index":1339,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you're",{"_index":323,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["you've",{"_index":1508,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yourself",{"_index":324,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["zebra",{"_index":1141,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["zindex",{"_index":1571,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["zone",{"_index":857,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":822,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddSubscription.html":{"url":"interfaces/AddSubscription.html","title":"interface - AddSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddSubscription\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an RxJS Subscription, with multi-version compatibility.\nThe standard SubscriptionLike does not contain an add() method.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(teardownLogic: TeardownLogic)\n                \n            \n\n\n\n\n            \n                \n                    Same as RxJS Subscription#add\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teardownLogic\n                                    \n                                            TeardownLogic\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AddSubscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendFactoryInput.html":{"url":"interfaces/BackendFactoryInput.html","title":"interface - BackendFactoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendFactoryInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n            \n                Description\n            \n            \n                DEPRECATED / @deprecated\nTo configure backends, prefer using the new { backend: SomeBackend, options: { ... } } pattern.\nThis used to be necessary for configuring backends in AOT mode, but with the new API,\nit is completely unnecessary.\nThis would be more aptly named as 'backendFactoryFactory'. Example:\n// must export for use with Angular's AOT compilation.\nexport function MyBackendFactory(): BackendFactory {\n    return (manager, context) => SomeBackend({ options: \"here\" })(manager, context);\n}\nforRoot({ backendFactory: MyBackendFactory })\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backendFactory\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backendFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DEPRECATED / @deprecated\nTo configure backends, prefer using the new { backend: SomeBackend, options: { ... } }\npattern. See BackendFactoryInput\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether dnd-core should enable debugging, which lets you see dnd-core actions\nin the Redux extension for Chrome.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendInput.html":{"url":"interfaces/BackendInput.html","title":"interface - BackendInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Used for providing backends to DndModule.\nYou can configure your backend with options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:     BackendFactory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BackendFactory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain backend, for example the HTML5Backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether dnd-core should enable debugging, which lets you see dnd-core actions\nin the Redux extension for Chrome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any configuration your backend accepts. Use this with the TouchBackend or the MultiBackend,\nfor example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionBase.html":{"url":"interfaces/ConnectionBase.html","title":"interface - ConnectionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConnectionBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                A base type to represent a DOM connection.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        listen\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(teardown: TeardownLogic)\n                \n            \n\n\n\n\n            \n                \n                    Same as RxJS Subscription.add().\nUseful, for example, for writing wrappers for the DndService methods,\nwhich might internally listen()/subscribe to DropTargetSpec and provide\na convenient callback after you hover without dropping or exiting for a specified\nduration. That would require the following pattern:\nfunction wrapper(dndService, types, spec, callback) {\n  let subj = new Subject();\n  let dt = dndService.dropTarget(types, {\n      ...spec,\n      hover: monitor => {\n      subj.next();\n      spec.hover && spec.hover(monitor);\n    }\n  });\n  // runs the callback until the returned connection\n  // is destroyed via unsubscribe()\n  dt.add(subj.pipe( ... ).subscribe(callback))\n  return dt;\n}\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teardown\n                                    \n                                            TeardownLogic\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten(mapTo: (monitor: TMonitor) => void)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n                    A connection maintains a subscription to dnd-core's drag state\nchanges. This function is how you are notified of those changes.\nThis function is essentially RxJS Observable.map with one small\noptimization: it runs the output of\nthe function you provide through distinctUntilChanged, and checks\nreference equality (===) for scalars and shallowEqual for Objects.\nBecause of #2, you can happily emulate react-dnd-style code like:\ncollected$ = this.target.listen(monitor => ({\n  isDragging: monitor.isDragging(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop()\n}));... in which case you probably want to use the *ngIf as pattern for\n grouping subscriptions into one bound template variable:\n\n  {{c.isDragging ? 'dragging': null}}\n  ...\nYou can also subscribe one-by-one, with isDragging$ = listen(m => m.isDragging()).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapTo\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n\n\n            \n                \n                    This method MUST be called, however you choose to, when ngOnDestroy() fires.\nIf you don't, you will leave subscriptions hanging around that will fire\ncallbacks on components that no longer exist.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DndModule.html":{"url":"modules/DndModule.html","title":"module - DndModule","body":"\n                   \n\n\n\n\n    Modules\n    DndModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(backendOrBackendFactory: BackendInput | BackendFactoryInput)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    backendOrBackendFactory\n                                    \n                                            BackendInput | BackendFactoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DndService.html":{"url":"injectables/DndService.html","title":"injectable - DndService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DndService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n\n            \n                Description\n            \n            \n                For a simple component, unsubscribing is as easy as connection.unsubscribe() in ngOnDestroy()\nIf your components have lots of subscriptions, it can get tedious having to\nunsubscribe from all of them, and you might forget. A common pattern is to create an RxJS Subscription\n(maybe called destroy), to use this.destroy.add(xxx.subscribe(...))\nand to call destroy.unsubscribe() once to clean up all of them. @ng-dnd/core\nsupports this pattern with by using the subscription parameter on the\nconstructors. Simply:\nimport { Subscription } from 'rxjs';\n// ...\ndestroy = new Subscription();\ntarget = this.dnd.dropTarget({\n  // ...\n}, this.destroy);\nngOnDestroy() { this.destroy.unsubscribe(); }It is a good habit for avoiding leaked subscriptions, because .\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragLayer\n                            \n                            \n                                    Public\n                                dragSource\n                            \n                            \n                                    Public\n                                dropTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dragLayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    dragLayer(subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                    \n                \n            \n\n            \n                \n                    This method creates a DragLayer object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DragLayer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dragSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    dragSource(type: string | symbol | null, spec: DragSourceSpec, subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                        DropResult\n                    \n                \n            \n\n            \n                \n                    This method creates a DragSource object. It represents a drag\nsource and its behaviour, and can be connected to a DOM element by\nassigning it to the [dragSource] directive on that element in your\ntemplate.\nIt is the corollary of react-dnd's\nDragSource.\nThe spec argument (DragSourceSpec) is a set of queries and\ncallbacks that are called at appropriate times by the internals. The\nqueries are for asking your component whether to drag/listen and what\nitem data to hoist up; the callback (just 1) is for notifying you when\nthe drag ends.\nOnly the drop targets registered for the same type will\nreact to the items produced by this drag source. If you want a dynamic\ntype, pass null as the type; and call DragSource in\na lifecycle hook.\nconnection to.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | symbol | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    spec\n                                    \n                                            DragSourceSpec\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An RxJS Subscription to tie the lifetime of the\nconnection to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DragSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dropTarget\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropTarget(types: TypeOrTypeArray | null, spec: DropTargetSpec, subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                        DropResult\n                    \n                \n            \n\n            \n                \n                    This drop target will only react to the items produced by the drag sources\nof the specified type or types.\nIf you want a dynamic type, pass null as the type; and call\nDropTarget in a lifecycle hook.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    types\n                                    \n                                                TypeOrTypeArray | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    spec\n                                    \n                                            DropTargetSpec\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DropTarget\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayer.html":{"url":"interfaces/DragLayer.html","title":"interface - DragLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragLayer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                For many use cases, the default rendering of the HTML5 backend should suffice.\nHowever, its drag preview has certain limitations. For example, it has to be an\nexisting node screenshot or an image, and it cannot change midflight.\nSometimes you might want to perform the custom rendering. This also becomes\nnecessary if you're using a custom backend. DragLayer lets you perform the\nrendering of the drag preview yourself.\nA drag layer is a special subscriber to the global drag state. It is called\na 'layer', not just a subscriber, because it is typically used to render custom\nelements that follow the mouse, above all other elements. The data flows like\nso:\ndrag start => global state => drag source => no preview\n                           => drag layer  => preview rendered on the spot\ndrag moved => global state => drag layer  => preview moves\ndrag ends  => global state => drag layer  => preview erasedTo use a drag layer as designed:\n\nCreate a drag layer: DndService.dragLayer. Make sure to unsubscribe from\nit in ngOnDestroy().\n\nListen to global drag state changes with DragLayer.listen. These are all available on DragLayerMonitor:\nwhether something is being dragged, what type it is, where the drag started, where the dragged element is now.\n\nIf dragging, render a custom preview under the current mouse position,\ndepending on the item type, in a position: fixed 'layer'. You may like to\nuse an *ngSwitch on the type, rather than one drag layer per type, simply\nto reduce code duplication.\n\n\nYou can see an example of a drag layer over on the Examples page.\nOne piece of advice for using drag layers effectively is to separate 'smart' and\n'dumb' components. If you have one component purely for visuals, which does all\ninput through @Input() and all interactivity through @Output() events, then\nyou can reuse it to display a drag preview based on either data in the item from\nDragSourceSpec.beginDrag, or supplied by a 'smart' component which pulls\ndata from somewhere else using only an id. This practice is even more\nimportant if you are using, or planning on using, anything other than the HTML5\nbackend, because no other backend provides automatic previews. In those cases\nyou must handle every draggable type in a drag layer to have any previews at\nall.\nOr, you could just use @ng-dnd/multi-backend.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten(mapTo: (monitor: DragLayerMonitor) => void)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n                    For listen functions in general, see ConnectionBase.\nThis listen function is called any time the global drag state\nchanges, including the coordinate changes, so that your component can\nprovide a timely updated custom drag preview. You can ask the monitor for\nthe client coordinates of the dragged item. Read the DragLayerMonitor\ndocs to see all the different possibile coordinates you might subscribe to.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapTo\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayerMonitor.html":{"url":"interfaces/DragLayerMonitor.html","title":"interface - DragLayerMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragLayerMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/layer-monitor.ts\n        \n\n\n            \n                Description\n            \n            \n                The monitor available inside DragLayer.\n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isDragging\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n            \n                \nisDragging()\n                \n            \n\n\n\n\n            \n                \n                    true if there is a drag operation in progress, false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragPreviewDirective.html":{"url":"directives/DragPreviewDirective.html","title":"directive - DragPreviewDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragPreviewDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Allows you to specify which element a DragSource should screenshot\nas an HTML5 drag preview.\nOnly relevant when using the HTML5 backend.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragPreview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragPreview\n                            \n                            \n                                dragPreviewOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragPreview\n                    \n                \n                \n                    \n                        Type :         DragSource\n\n                    \n                \n                \n                    \n                        The drag source for which this element will be the preview.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragPreviewOptions\n                    \n                \n                \n                    \n                        Type :         DragPreviewOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to #connectDragPreviewDragSource.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragPreviewOptions.html":{"url":"interfaces/DragPreviewOptions.html","title":"interface - DragPreviewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragPreviewOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide options for how to render a drag preview. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            anchorX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            anchorY\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            captureDraggingState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offsetX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offsetY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchorX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nhorizontal offset of the drag preview when their sizes don't match.\n0 means \"dock the preview to the left\", 0.5 means \"interpolate linearly\"\nand 1 means \"dock the preview to the right\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchorY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchorY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nvertical offset of the drag preview when their sizes don't match. 0 means\n\"dock the preview to the top, 0.5 means \"interpolate linearly\" and\n1 means \"dock the preview to the bottom.\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        captureDraggingState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        captureDraggingState:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, false. If true, the component will learn that it is being\ndragged immediately as the drag starts instead of the next tick. This\nmeans that the screenshotting would occur with monitor.isDragging()\nalready being true, and if you apply any styling like a decreased opacity\nto the dragged element, this styling will also be reflected on the\nscreenshot. This is rarely desirable, so false is a sensible default.\nHowever, you might want to set it to true in rare cases, such as if you\nwant to make the custom drag layers work in IE and you need to hide the\noriginal element without resorting to an empty drag preview which IE\ndoesn't support.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offsetX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetX has a value, anchorX won't be\nused.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offsetY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetY has a value, anchorY won't be\nused.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSource.html":{"url":"interfaces/DragSource.html","title":"interface - DragSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSource\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                Like DropTarget, it can be used just for subscribing to\ndrag state information related to a particular item type or list of types.\nYou do not have to connect it to a DOM element if that's all you want.\nTo create one, refer to DndService.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        connectDragPreview\n                                    \n                                \n                                \n                                    \n                                        connectDragSource\n                                    \n                                \n                                \n                                    \n                                        getHandlerId\n                                    \n                                \n                                \n                                    \n                                        setType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connectDragPreview\n                        \n                    \n                \n            \n            \n                \nconnectDragPreview(elementOrNode: Node, options?: DragPreviewOptions)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DragSource as a preview.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nYou might use an ElementRef.nativeElement, or even an\nImage.\nconst img = new Image();\nimg.onload = this.source.connectDragPreview(img);\nimg.src = '...';The subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DragPreviewOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectDragSource\n                        \n                    \n                \n            \n            \n                \nconnectDragSource(elementOrNode: Node, options?: DragSourceOptions)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DragSource.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DragSourceOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandlerId\n                        \n                    \n                \n            \n            \n                \ngetHandlerId()\n                \n            \n\n\n\n\n            \n                \n                    Returns the drag source ID that can be used to simulate the drag and drop events\nwith the testing backend.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setType\n                        \n                    \n                \n            \n            \n                \nsetType(type: string | symbol)\n                \n            \n\n\n\n\n            \n                \n                    Use this method to have a dynamically typed source. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDragSourceSpec property.\nIf you wish to have a dynamic type based on an @Input() property, for\nexample, you must call setType() in either of your component's\nngOnInit or ngOnChanges methods:\n@Input() type: string;\n@Input() model: { parentId: number; name: string; };\ntarget = this.dnd.dragSource(null, {\n  // ...\n});\nngOnChanges() {\n  // use what your parent component told you to\n  this.target.setType(this.type);\n  // or create groupings on the fly\n  this.target.setType(\"PARENT_\" + this.model.parentId.toString());\n}It may be more convenient or easier to understand if you write:\n@Input() set type(t) {\n  this.source.setType(t);\n}\nsource = this.dnd.dragSource(null, {\n  beginDrag: () => ({ ... })\n});\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragSourceDirective.html":{"url":"directives/DragSourceDirective.html","title":"directive - DragSourceDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragSourceDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Allows you to connect a DragSource to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragSource]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragSource\n                            \n                            \n                                dragSourceOptions\n                            \n                            \n                                dragSourceType\n                            \n                            \n                                noHTML5Preview\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragSource\n                    \n                \n                \n                    \n                        Type :         DragSource\n\n                    \n                \n                \n                    \n                        Which source to connect the DOM to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceOptions\n                    \n                \n                \n                    \n                        Type :         DragSourceOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to #connectDragSourceDragSource.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceType\n                    \n                \n                \n                    \n                        Type :     string | symbol\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs #setTypeDragSource.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noHTML5Preview\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Do not render an HTML5 preview. Only applies when using the HTML5 backend.\nIt does not use { captureDraggingState: true } for IE11 support; that is broken.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceMonitor.html":{"url":"interfaces/DragSourceMonitor.html","title":"interface - DragSourceMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSourceMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/source-monitor.ts\n        \n\n\n            \n                Description\n            \n            \n                The monitor available in DragSource's listen method.\n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canDrag\n                                    \n                                \n                                \n                                    \n                                        didDrop\n                                    \n                                \n                                \n                                    \n                                        getDropResult\n                                    \n                                \n                                \n                                    \n                                        isDragging\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDrag\n                        \n                    \n                \n            \n            \n                \ncanDrag()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if NO drag operation is in progress, and the owner's\ncanDrag() returns true or is not defined.\nNote that canDrag doesn't blindly return what you supplied in\nDragSourceSpec, so it isn't very useful as a general\nsource-is-enabled/disabled flag.\nInstead, keep your canDrag logic simple, and replicate it in your template.\n content {\n  canDrag: () => this.someProperty\n}\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didDrop\n                        \n                    \n                \n            \n            \n                \ndidDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if some drop target handled the drop event; false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside endDrag() to test whether any drop target\nhas handled the drop. Returns false if called outside endDrag().\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDropResult\n                        \n                    \n                \n            \n            \n                \ngetDropResult()\n                \n            \n\n\n\n\n            \n                \n                    Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result from\ndrop() overrides the child drop result previously set by the child.\nReturns null if called outside endDrag().\n\n\n                    \n                        Returns :     DropResult\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n            \n                \nisDragging()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if a drag operation is in progress, and either the owner\ninitiated the drag, or its isDragging() is defined and returns true.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceOptions.html":{"url":"interfaces/DragSourceOptions.html","title":"interface - DragSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSourceOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide customisations for how a backend should handle a DragSource and\ndisplay items dragged from it. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dropEffect\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropEffect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dropEffect:     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string. By default, 'move'. In the browsers that support this\nfeature, specifying 'copy' shows a special \"copying\" cursor, while 'move'\ncorresponds to the \"move\" cursor. You might want to use this option to\nprovide a hint to the user about whether an action is destructive.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceSpec.html":{"url":"interfaces/DragSourceSpec.html","title":"interface - DragSourceSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSourceSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drag-source-specification.ts\n        \n\n\n            \n                Description\n            \n            \n                The spec passed to DndService.\nNote the two type parameters. Both must represent plain JS objects.\nItem is the type you return from beginDrag(), and available in monitor.getItem().\nLimitations in TypeScript may prevent inferring this in many circumstances,\nand it will default to {}. It is best if you are strong-typing to pass a\ntype parameter like so:\ninterface MyDraggedItemType { id: number; }\n// ...\nsource = this.dnd.dragSource(..., {\n    beginDrag: monitor => ({ id: this.id })\n})DropResult is the type you expect a drop target to return from drop().\nIt is the type of the object returned by monitor.getDropResult() during endDrag().\nNote that your backend may assign some extra properties. You should define a\nDropResult type that recognises these, such as:\ninterface HTML5DropResult { dropEffect: string; }\ninterface MyDropResult extends HTML5DropResult { id: number; }\ntarget = this.dnd.dropTarget(..., {\n    drop: monitor => ({ id: this.id })\n});\n\nsource = this.dnd.dragSource(..., {\n    endDrag: monitor => {\n        const result = monitor.getDropResult();\n        if (result.dropEffect === 'copy') {\n            // user had alt key pressed + the GreenPlus icon when they dropped,\n            // so copy instead of move\n        }\n    }\n});\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        beginDrag\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        canDrag\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        endDrag\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        isDragging\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginDrag\n                        \n                    \n                \n            \n            \n                \nbeginDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Required. When the dragging starts, beginDrag is called. You must return\na plain JavaScript object describing the data being dragged. What you\nreturn is the only information available to the drop targets about the\ndrag source so it's important to pick the minimal data they need to know.\nYou may be tempted to put a reference to the component into it, but you\nshould try very hard to avoid doing this because it couples the drag\nsources and drop targets. It's a good idea to return something like { id: this.id } from this method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Item\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        canDrag\n                        \n                    \n                \n            \n            \n                \ncanDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Optional. Queries your component to determine whether this source can be\ndragged. Default returns true; this is often sufficient.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        endDrag\n                        \n                    \n                \n            \n            \n                \nendDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Optional. Notifies your component when dragging ends.\nThis is a good place to fire actions or modify a component. You will often\nwant to check DragSourceMonitor and DragSourceMonitor for more\ndetails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        isDragging\n                        \n                    \n                \n            \n            \n                \nisDragging(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    By default, only the drag source that initiated the drag operation is\n considered to be dragging. You might override this by matching on the\n DragSourceMonitor.id and your component's id, or similar. Do this if the\n original component may be unmounted during the dragging and later\n \"resurrected\" with a different parent. For example, when moving a card\n across the lists in a Kanban board, you want it to retain the dragged\n appearance—even though technically, the component gets unmounted and\n a different one gets mounted every time you hover over another list.\n Note: You may not call DragSourceMonitor inside this method.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DropTarget\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents one drop target and its behaviour, that can listen to the state\nand connect to a DOM element.\nTo create one, refer to DndService.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        connectDropTarget\n                                    \n                                \n                                \n                                    \n                                        getHandlerId\n                                    \n                                \n                                \n                                    \n                                        setTypes\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connectDropTarget\n                        \n                    \n                \n            \n            \n                \nconnectDropTarget(elementOrNode: Node)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DropTarget.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DropTarget already has a type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandlerId\n                        \n                    \n                \n            \n            \n                \ngetHandlerId()\n                \n            \n\n\n\n\n            \n                \n                    Returns the drop target ID that can be used to simulate the drag and drop events\nwith the testing backend.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypes\n                        \n                    \n                \n            \n            \n                \nsetTypes(type: TypeOrTypeArray)\n                \n            \n\n\n\n\n            \n                \n                    Use this method to have a dynamically typed target. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDropTargetSpec property.\nSee DragSource for an example of how to set\na dynamic type, for it is very similar here.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                TypeOrTypeArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropTargetDirective.html":{"url":"directives/DropTargetDirective.html","title":"directive - DropTargetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropTargetDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Allows you to connect a DropTarget to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dropTarget]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropTarget\n                            \n                            \n                                dropTargetType\n                            \n                            \n                                dropTargetTypes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropTargetType\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dropTarget\n                    \n                \n                \n                    \n                        Type :         DropTarget\n\n                    \n                \n                \n                    \n                        Which target to connect the DOM to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n                \n                    \n                        Reduce typo confusion by allowing non-plural version of dropTargetTypes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetTypes\n                    \n                \n                \n                    \n                        Type :         TypeOrTypeArray\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs #setTypesDropTarget.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n\n\n                \n                    \n                        setdropTargetType(t: TypeOrTypeArray)\n                    \n                \n                    \n                        \n                                Reduce typo confusion by allowing non-plural version of dropTargetTypes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                            \n                                                                            TypeOrTypeArray\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetMonitor.html":{"url":"interfaces/DropTargetMonitor.html","title":"interface - DropTargetMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DropTargetMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/target-monitor.ts\n        \n\n\n            \n                Description\n            \n            \n                The monitor available in DropTarget's listen method.\n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canDrop\n                                    \n                                \n                                \n                                    \n                                        didDrop\n                                    \n                                \n                                \n                                    \n                                        getDropResult\n                                    \n                                \n                                \n                                    \n                                        isOver\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDrop\n                        \n                    \n                \n            \n            \n                \ncanDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if there is a drag operation in progress, and the owner's\ncanDrop() returns true or is not defined.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didDrop\n                        \n                    \n                \n            \n            \n                \ndidDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if some drop target has handled the drop event, false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside drop() to test whether any nested drop\ntarget has already handled the drop. Returns false if called outside\ndrop().\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDropResult\n                        \n                    \n                \n            \n            \n                \ngetDropResult()\n                \n            \n\n\n\n\n            \n                \n                    Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result\nfrom drop() overrides the drop result previously set by the child.\nReturns null if called outside drop().\n\n\n                    \n                        Returns :     DropResult\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOver\n                        \n                    \n                \n            \n            \n                \nisOver(options?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Returns true if there is a drag operation in progress, and the pointer\nis currently hovering over the owner. You may optionally pass\n{ shallow: true } to strictly check whether only the owner is being\nhovered, as opposed to a nested target.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetSpec.html":{"url":"interfaces/DropTargetSpec.html","title":"interface - DropTargetSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DropTargetSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drop-target-specification.ts\n        \n\n\n            \n                Description\n            \n            \n                The spec passed to DndService.\nNote the two type parameters. Both must represent plain JS objects. See the extended\ndiscussion of these type parameters at DragSourceSpec.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        canDrop\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        drop\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hover\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        canDrop\n                        \n                    \n                \n            \n            \n                \ncanDrop(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Queries your component to determine whether an item can be dropped on this target.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\nDefault, when not specified, is true.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Called when a compatible item is dropped on the target. You may either\n return nothing, or a plain object.\nIf you return an object, it is going to become the drop result and will be\navailable to the drag source in its DragSourceSpec method as\nDropTargetMonitor. This is useful in case you want the\nsource to perform different actions depending on which target received the\ndrop. Otherwise, it is simpler to handle the dropped item here.\nIf you have nested drop targets, you can test whether a nested target has\nalready handled drop by checking DropTargetMonitor. Both this\nmethod and the source's endDrag() method are good places to fire\n@ngrx/store actions.\nThis method will not be called if canDrop() is defined and returns false.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DropResult | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hover\n                        \n                    \n                \n            \n            \n                \nhover(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Called frequently while the mouse hovers over the owner drop target while\ndragging a relevant item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitorBase.html":{"url":"interfaces/MonitorBase.html","title":"interface - MonitorBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MonitorBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monitor-base.ts\n        \n\n\n            \n                Description\n            \n            \n                The methods common to all monitor classes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getClientOffset\n                                    \n                                \n                                \n                                    \n                                        getDifferenceFromInitialOffset\n                                    \n                                \n                                \n                                    \n                                        getInitialClientOffset\n                                    \n                                \n                                \n                                    \n                                        getInitialSourceClientOffset\n                                    \n                                \n                                \n                                    \n                                        getItem\n                                    \n                                \n                                \n                                    \n                                        getItemType\n                                    \n                                \n                                \n                                    \n                                        getSourceClientOffset\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClientOffset\n                        \n                    \n                \n            \n            \n                \ngetClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The current mouse x,y position relative to the viewport. Returns null\nif no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDifferenceFromInitialOffset\n                        \n                    \n                \n            \n            \n                \ngetDifferenceFromInitialOffset()\n                \n            \n\n\n\n\n            \n                \n                    A vector x,y of the displacement of the dragged item from its initial\nposition. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitialClientOffset\n                        \n                    \n                \n            \n            \n                \ngetInitialClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The initial mouse x,y position relative to the viewport, when the current\ndrag operation started. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitialSourceClientOffset\n                        \n                    \n                \n            \n            \n                \ngetInitialSourceClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    x,y relative to viewport of the item's DOM element before it was dragged.\nReturns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem()\n                \n            \n\n\n\n\n            \n                \n                    The item in transit, if any. This is what you returned from\nDragSourceSpec. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :     Item | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemType\n                        \n                    \n                \n            \n            \n                \ngetItemType()\n                \n            \n\n\n\n\n            \n                \n                    The type of the item in transit. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :     string | symbol | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSourceClientOffset\n                        \n                    \n                \n            \n            \n                \ngetSourceClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The projected x,y position relative to viewport of the root DOM element of the drag source\n= its initial position + displacement. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offset.html":{"url":"interfaces/Offset.html","title":"interface - Offset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Offset\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-ish.ts\n        \n\n\n            \n                Description\n            \n            \n                Just a plain, reusable xy coordinate type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    x coordinate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    y coordinate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n1.0.0 (2021-08-14)\nNote: Version bump only for package @ng-dnd/core\n0.1.2 (2021-08-09)\nNote: Version bump only for package @ng-dnd/core\n0.1.1 (2021-08-07)\nNote: Version bump only for package @ng-dnd/core\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            ConnectionBase\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragLayer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragSource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DropTarget\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            injectable\n            DndService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            interface\n            AddSubscription\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragPreviewOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragSourceOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragPreviewDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragSourceDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DropTargetDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendFactoryInput\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendInput\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/drag-source-specification.ts\n            \n            interface\n            DragSourceSpec\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/drop-target-specification.ts\n            \n            interface\n            DropTargetSpec\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/layer-monitor.ts\n            \n            interface\n            DragLayerMonitor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/monitor-base.ts\n            \n            interface\n            MonitorBase\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/source-monitor.ts\n            \n            interface\n            DragSourceMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/target-monitor.ts\n            \n            interface\n            DropTargetMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_DEBUG_MODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_GLOBAL_CONTEXT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_MANAGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            TYPE_DYNAMIC\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/type-ish.ts\n            \n            interface\n            Offset\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            dnd-core : ^14.0.0\n        \n            tslib : ^1.9.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : >= 6.0.0\n        \n            @angular/core : >= 6.0.0\n        \n            rxjs : >= 6.0.0\n        \n            zone.js : >= 0.8.26\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-dnd/core\n\n\n\nNg-DnD is a toolkit for building complex drag and drop interfaces in Angular. It is based on, and very similar to react-dnd by Dan Abramov and others, and is also powered by dnd-core. It is compatible with all backends.\nCheck out the examples here.\nInstallation\nyarn add @ng-dnd/core react-dnd-html5-backendNext, follow the Quickstart and check out the Tutorial.\nSub-packages\n\n@ng-dnd/multi-backend\n@ng-dnd/sortable\n\nFeatures\n\nMake any component draggable, or into a drop target.\nDoesn't mutate the DOM, and doesn't use classes and CSS to do 'callbacks'.\nEvery visible change is made through Angular templates.\nThe truth lives in JavaScript, with unidirectional data flow (like\n@ngrx/store)\nObservable APIs, designed to fit in Angular.\nTypeScript friendly, with strong typing for in-flight objects, and inline\ndocumentation.\nWorks with HTML5 drag and drop, and all other react-dnd backends.\n\nGoals\n\nHigh performance. All code runs outside the Angular zone, and re-enters in batches only where strictly necessary, such that change detection runs precisely as many times as you need it to, with no extra configuration. You should also be able to take full advantage of OnPush change detection.\n\nLargely possible to translate react-dnd code and examples into Angular (see Translating React Code).\n\nComprehensive documentation and tons of example code, written in Angular style.\n\n\nWhat can you do with it?\nInstead of building maximally-ergonomic solutions to simple use cases, react-dnd and @ng-dnd provide an abstraction over most things you could want to do with drag and drop. They are lower-level building blocks that make it easy to implement some very complex interactions. They assign no specific meaning to a drag/drop operation. You get to define what happens when a drag starts or ends or hovers. Here are some ambitious examples:\n\nThe traditional react-dnd tutorial, a chess board with movable pieces and rules\nDeleting items by dragging them to a 'trash can', like in the macOS dock.\nStamping out a template by dragging the template into a work area\nMerging two items by dragging one on top of the other\nHover over a 'folder' for a few seconds to 'drill down' into it\nThe famous lists and cards on trello.com, which actually uses react-dnd\nA diagramming tool where you can draw links between nodes\nA 2D CAD program\nA graphical query builder, or visual data pipeline like Luna\nMany other demonstrations of react-dnd (most with GIFs) in use\n\nAlternatives\nIt is important to note that for bare-bones sortable lists, where you have a mutable array of simple values, you don't necessarily need the superpowers in this library. There are plenty of cookie-cutter solutions out there, like the quite powerful ng2-dnd or ng2-dragula, which may get you to your deadline faster than learning and using @ng-dnd. But be warned; you may find yourself wanting more dragging power once you get a taste. In fact, this package was born when @cormacrelf got sick of maintaining ng2-dragula and watching users struggle to implement what react-dnd was born for.\nIf Angular and React aren't your thing, there's also vue-react-dnd.\nIssues\nNot all issues are @ng-dnd-related. If you think you found a bug in dnd-core or with the HTML5 backend, those issues belong on that codebase with their many contributors and wealth of experience. If there is a problem with another backend you are using, file an issue with that backend so you can get more specific help and so that the community can benefit.\nIssues and potential improvements to @ng-dnd are discussed on GitHub.\nLicense\nThis library is released under the MIT license. It depends on dnd-core, which is (now) also under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DndModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DragSourceDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DragSourceFactory   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetFactory   (src/.../wrappers.ts)\n                        \n                        \n                            TypeOrTypeArray   (src/.../type-ish.ts)\n                        \n                        \n                            Types   (src/.../wrappers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/wrappers.ts\n    \n    \n        \n            \n                \n                    \n                    DragSourceDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DragSourceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Types\n                \n            \n            \n                \n                        string | symbol | (string | symbol)[]\n\n                \n            \n        \n    \n    src/type-ish.ts\n    \n    \n        \n            \n                \n                    \n                    TypeOrTypeArray\n                \n            \n            \n                \n                    String, symbol, or an array of either. Used on drop targets.\n\n                \n            \n            \n                \n                        string | symbol | Array\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DRAG_DROP_BACKEND   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_DEBUG_MODE   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_FACTORY   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_OPTIONS   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_GLOBAL_CONTEXT   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_MANAGER   (src/.../tokens.ts)\n                        \n                        \n                            TYPE_DYNAMIC   (src/.../tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'dnd-core compatible backend'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend currently in use.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND_DEBUG_MODE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'should dnd-core run in debug mode?'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend currently in use.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'dnd-core compatible backend'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core BackendFactory used to instantiate dnd-core.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'options for dnd-core compatible backend'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend's options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_GLOBAL_CONTEXT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'dnd-core context'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend currently in use.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'dnd-core DragDropManager'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core DragDropManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TYPE_DYNAMIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     symbol\n\n                    \n                \n                \n                    \n                        Default value : Symbol(\n  'no type specified, you must provide one with setType/setTypes'\n)\n                    \n                \n\n            \n                \n                    The type a source or target is given as a marker for 'you supplied null as a type',\nso that library consumers can be reminded to use setType/setTypes manually.\nSee #setTypeDragSource, #setTypesDropTarget.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/quickstart.html":{"url":"additional-documentation/quickstart.html","title":"additional-page - Quickstart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInstallation\nyarn add @ng-dnd/core react-dnd-html5-backendYou might consider @ng-dnd/multi-backend instead of the HTML5\nbackend, because it allows adding touch support as well.\nThen import DndModule and provide the backend:\nimport { DndModule } from \"@ng-dnd/core\";\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\n@NgModule({\n  imports: [\n    // Don't forget the forRoot()\n    DndModule.forRoot({ backend: HTML5Backend }),\n  ]\n})\nexport class AppModule {}If you need it again on a child module, like a lazy-loaded module, you only need\nto import DndModule there. That way the backend and global drag state is only\ninitialized once. But you may use forRootto inject a new instance or to\ninclude drag and drop on only some child modules.\nConcepts\nThese pieces make up the library:\n\nAn item (JS Object, not a DOM node) is the source of truth for each drag\n operation\n A drag source registers a DOM node to commence drag operations\nA drop target registers a DOM node for hover and drop events\n while dragging\nA way for each to provide, listen for and query changes in the drag state:\n a monitor and appropriate callbacks\n Hooks to provide some other DOM element as the drag preview.\n\nreact-dnd defined one more thing, inspired by HTML5, to make using this sane:\neach item has a type, and drag sources and drop targets will\nrespectively emit and accept only items with matching types.\nThat's it. This library offers all those concepts in an Angular-friendly way,\nthat is also largely compatible with a lot of react-dnd code and examples.\nNext steps\n\nHave a look at the Examples, and browse their source code in the\nexamples app on GitHub.\n\nRead and follow the Tutorial\n\nRead the 3-part guide in the sidebar. Any specifics are available by browsing the interfaces and\nclasses.\n\n\nTouch support and alternate backends\nMobile devices have not implemented HTML5 drag and drop. You will need:\n\nA different backend using click or touch events, without dropping desktop support\nA way to render drag previews. Where on desktops you\ncan let the browser render drag previews, when using a backend based on click\nor touch events, on mobile you have to render them yourself.\n\nA good way to solve both problems at once is using\n@ng-dnd/multi-backend. It is based on the original\ndnd-multi-backend, which was designed to seamlessly switch\nbetween an HTML5 and a touch backend when it noticed different\nkinds of interaction. The @ng-dnd version includes a preview component.\nNote also that you will need to use an exported function\nto provide the backend, to retain AOT compatibility, if it requires assembly.\nMultiBackend, for example, can be used like so:\nexport function createBackend() {\n    return MultiBackend(HTML5ToTouch);\n}\n@NgModule({\n  imports: [\n    DndModule.forRoot({ backendFactory: createBackend })\n  ]\n}\n// ...Troubleshooting\nI get TypeError: backend is null, only when AOT is enabled\nAlso rears its head as No such property 'default' of undefined.\nTroubleshooting steps\n\nCheck you are importing the backend and renaming any default exports.\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { SomeImaginaryBackendWithNamedExports } from 'some-imaginary-backend'; Generally, make sure you are importing the backend correctly. If it does not\n provide Typescript definitions, you might have to read the documentation or\n browse the source code.\n\nMake sure in your root Angular module (usually app.module.ts) you import\n DndModule.forRoot({ backend: MyBackend }) instead of plain DndModule.\n\n\nI get Error encountered resolving symbol values statically. Calling function 'default' with AOT enabled.\nMake sure you are following the special instructions for assembly-required backends\nlike MultiBackend or any backend that allows SomeBackend({ optionsHere: true }),\nlike TouchBackend. See above.\nIn the spec callbacks, my component doesn't have any properties, and it can't call this.method()!\nMake sure you use the arrow function syntax (() =>) in your specs so this will refer to your component. Example:\npaperCount = 3;\nlimitedSupplyOfPaper = this.dnd.dragSource(\"PAPER\", {\n    // use shorthand for one-liners that return a value\n    canDrag: () => this.paperCount > 0,\n    endDrag: (monitor) => {\n        if (monitor.didDrop()) {\n            this.paperCount--;\n        }\n    }\n});This demo shows comprehensively what this refers to\nin arrow functions vs regular ones. A sufficiently advanced editor shouldn't\nshow any completions at this.| in a regular function, as it will resolve the\ntype of this to be any.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide.html":{"url":"additional-documentation/guide.html","title":"additional-page - Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWhen using @ng-dnd, you follow this general pattern:\n\nCreate a connection and specify its behaviour: Creating Connections\nUse directives or methods to connect it to real DOM elements:\nConnecting to DOM\nUse the connection's listen method to listen for relevant state changes, and respond to them:\nMonitoring State\nRemember to destroy the connection in ngOnDestroy(). Refer to part 1\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/1.-creating-connections.html":{"url":"additional-documentation/guide/1.-creating-connections.html","title":"additional-page - 1. Creating connections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreating connections\nThere are three types of connection.\n\nDragSource\nis for allowing components to be dragged. Create one with\nDndService#dragSource\nusing a\nDragSourceSpec\nand attach it to the DOM\nwith [dragSource]=\"...\".\n\nDropTarget\nis for allowing components to be dragged. Create one with\nDndService#dropTarget\nusing a\nDropTargetSpec\nand attach it to the DOM\nwith [dropTarget]=\"...\".\n\nDragLayer\nis an advanced feature that allows you to implement your own\ncustom drag previews. Create one with\nDndService#dragLayer,\nbut you don't attach them to the DOM, you simply listen for changes.\n\n\nAll three of them have the same lifecycle, and all three of them offer a\n.listen() function, which allows you to listen to changes. See\nConnectionBase for what they have in\ncommon.\nUsing the DndService to create connections\nFirst, inject \nDndService,\n into your component.\nconstructor(private dnd: DndService) { ... }Then, use one of the methods\nDndService#dragSource,\nDndService#dropTarget\nto create one and store it as an instance variable, and make sure to tear down\nthe connection in ngOnDestroy.\nsource = this.dnd.dragSource(\"CAT\", {\n  beginDrag: (monitor) => ({ id: this.cat.id })\n  // ...\n});\n// or\ntarget = this.dnd.dropTarget([\"CAT\", \"ZEBRA\"], {\n  // ...\n});\nconstructor(private dnd: DndService) { ... }\n\nngOnDestroy() {\n  this.source.unsubscribe();\n  // or\n  this.target.unsubscribe();\n}Then, you will want to add some behaviour beyond the default by looking into the\nSpec input for your connection type.\nDestroying Connections\nAll three types of connection need to be destroyed when your component is\ndestroyed. If you don't, you will have strange problems.\nThe easy way is to call\n.unsubscribe() on the\nconnection object in ngOnDestroy.\nngOnDestroy() {\n    this.source.unsubscribe();\n    this.target.unsubscribe();\n    this.layer.unsubscribe();\n    // neat. we're done.\n}\nBut I have ten other subscriptions!\nIn situations where your component has a lot of subscription logic to\nmaintain, there are more powerful ways of unsubscribing to many things at once.\nYou can create an RxJS Subscription object in your component, and call\nSubscription.add(conn) with your connection. There is a convenience parameter\non each of the DndService methods which will do this for you.\nimport { Subscription } from 'rxjs';\n\n// ...\n\nsubs = new Subscription();\n\nsource = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\ntarget = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\n// ...\n\nngOnInit() {\n    // subscribe to lots of things here\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n}\nngOnDestroy() {\n  // This will unsubscribe everything, including source and target\n  this.subs.unsubscribe();\n}(It is not recommended to have a large number of drag sources and drop targets\nattached to a single component, especially not in a variably-sized array,\nsimply because that is poor component structure. Instead, consider creating a\ncomponent that handles a single piece of dragging logic, and use an *ngFor over\nthe whole component.)\nNext: Connecting to DOM.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/2.-connecting-to-dom.html":{"url":"additional-documentation/guide/2.-connecting-to-dom.html","title":"additional-page - 2. Connecting to DOM","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConnecting sources and targets to real DOM elements\nOnce you have created a connection, it is most useful when connected to a real\nDOM element.\nMaking a DOM element draggable\nThis means that events fired inside the element's bounding rectangle will start\na drag. Use DragSourceDirective to do this. It's as simple as:\n\n  drag me\nsource = this.dnd.dragSource(\"DRAGME\", {\n  beginDrag: () => ({ name: 'Jones McFly' }),\n  // other DragSourceSpec methods\n});\n// constructor, unsubscribe, etcThen, investigate using\nDragSourceSpec\nto customise the behaviour.\nMaking a DOM element into a drop target\nThis means your element will react to items being hovered or dropped within its\nbounding rectangle.\n\n  drop on me\ntarget = this.dnd.dropTarget(\"DRAGME\", {\n    drop: monitor => {\n        console.log('dropped an item:', monitor.getItem()); // => { name: 'Jones McFly' }\n    }\n})\n// constructor, unsubscribe, etcThen, investigate using\nDropTargetSpec\nto customise the behaviour.\nDrag previews\nThis is a feature unique to the HTML5 backend. If you are using another\nbackend, you will need a Drag Layer (see below) to render anything that follows\nthe mouse.\nBy default, a static screenshot of the original [dragSource] element will form\na drag preview and follow the mouse around.\nUsing a different element as the preview source\nIf you want another element to be the source of the preview, you can use the\n[dragPreview]=\"source\" directive.\nIf you place a DragPreviewDirective on a different element than the\n[dragSource], and pass the same DragSource connection to it, the\npreview element will take over the job of posing for the preview screenshot.\nUsing a 'drag handle'\nThis is a common use of custom drag previews, where a box with a smaller handle\nwithin it is only draggable from the handle. This is useful for moving\ninteractive blocks of UI (e.g.  elements) around the screen, without\ntouching the inputs / selecting text / making unwanted changes.\n\nAttach [dragSource]=\"source\" to the handle.\nAttach [dragPreview]=\"source\" to the overall box being dragged.\nAs always, you may consider applying CSS cursor: move or cursor: grab or\nsimilar to the handle, to make sure users can discover what the handle is\nfor.\n\nUsing an image preview\n\nCreate an image element with const img = new Image(); img.src = \"...\";\nUse img.onload = () => { ... } to wait for it to load. Inside the onload\ncallback, run someDragSourceConnection.connectDragPreview(img).\n\nSee DragSource.connectDragPreview and DragPreviewOptions for options.\nNext: Monitoring State.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/3.-monitoring-state.html":{"url":"additional-documentation/guide/3.-monitoring-state.html","title":"additional-page - 3. Monitoring State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMonitoring State\nHow to change your template depending on the drag state\n\nTake any connection object, like DropTarget\nCall .listen() with a function that returns what information you want to\nmonitor\nSave the resulting Observable to an instance variable in your component\nUse the observable via the | async pipe to render alternate content in\nyour template.\n\nFor example:\n\n    drop cats here\n.cat-target { background: #eee; }\n.cat-target--hovering { background: lightgoldenrodyellow; }target = this.dnd.dropTarget(\"CAT\", {\n    drop: monitor => {\n        console.log('dropped a cat');\n    }\n});\n\n// this is a very useful combination on a drop target,\n// which expresses 'hovering over' + ('same type' + 'DropTargetSpec.canDrop returned true')\n// you almost always want to use the combination rather than isOver on its own\nhovering$ = this.target.listen(m => m.isOver() && m.canDrop());What can you listen to?\nEach type of connection gets a different set of information available on the\nmonitor. They are laid out in these interfaces:\n\nDragSourceMonitor\nDropTargetMonitor\nDragLayerMonitor\nAll three derive from MonitorBase\n\nOptimisation\nNote that all three monitors have very rapidly-changing information available on\nthem, such as the current viewport-mouse offset. The .listen() functions will\noptimise component updates for you. You don't want to:\n\nSubscribe to more properties than you need. This hinders performance.\nSubscribe to the entire monitor object. It will only fire once, and then\nnever again, because the monitor object itself is the same each time.\n\nThe implementation of listen() includes an implementation of RxJS'\ndistinctUntilChanged that also optimises for JS Objects with the same keys\nbut different values. The following two examples fire exactly as often:\nisDraggingPlain$ = this.source.listen(m => m.isDragging());\nisDraggingObj$   = this.source.listen(m => ({ isDragging: m.isDragging() }));This is helpful if you have a lot of properties to listen to and wish to\nreduce the number of | async pipes in your code, or if you want to copy\nsome react-dnd code.\nMaking decisions in the Spec based on current drag state\nThe other place you get access to a monitor is in the callbacks in each Spec.\nMonitors carry some information only relevant and usable inside these callbacks.\nThose methods are documented in the monitor interfaces, and particularly useful\nmethods are highlighted in each of the Spec callbacks, such as\nDropTargetSpec.drop.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/chess-tutorial.html":{"url":"additional-documentation/chess-tutorial.html","title":"additional-page - Chess Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nChess Tutorial\nIn this tutorial, we're building a tiny chess game, with one knight on the\nboard. It's an Angular-specific translation of the original react-dnd\ntutorial. The discussion about how to break down this game into\ncomponents is worth reading the original for. We will carry on implementing the\nthree components:\n\nKnightComponent, responsible for rendering one knight piece\nSquareComponent, just one black or white square on the board\nBoardComponent, 64 squares.\n\nThis tutorial assumes you are familiar with the basics of Angular (version 2+).\nIt also assumes you have read the Quickstart guide, and have attached the\nDndModule and the HTML5 backend. Complete source code is available on\nGitHub, in four commits: one, two,\nthree, four, the last of which is the finished\nproduct. You can play with a live demo.\nBasic chess visuals\nWe'll build the KnightComponent first. It is very simple, just a span with a Unicode\nknight character in it.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-knight',\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 400;\n        font-size: 54px;\n        line-height: 70px;\n    }\n    `]\n})\nexport class KnightComponent {\n}Add this component to your module's declarations section, and put\n somewhere on your page.\n\nNext, we will implement SquareComponent. It is responsible only for changing the colour\nof the background and foreground depending on a black input, and rendering\nwhatever was passed to it inside its tags. Make a SquareComponent, add it to\nyour module, and include the following very simple HTML template:\n\n  \nIn the body of the component class, add an input for whether the square should\nbe black or not:\n@Input() black: boolean;Then implement getStyle() by reading this property.\ngetStyle() {\n    return this.black\n        ? { backgroundColor: 'black', color: 'white' }\n        : { backgroundColor: 'white', color: 'black' }\n}Note that by attaching these styles directly via [ngStyle], they are not\naffected by Angular's view encapsulation, so color will apply to any child\ncomponents as well. You could achieve the same by using classes and CSS and\n::ng-deep or turning view encapsulation off, but [ngStyle] is good enough\nfor us.\nThen, we want SquareComponent to take up all the space available to it. This\nway, Square can be arbitrarily large, and we don't have to be concerned with how\nbig the whole board is going to be. Include the following in a styles block,\nor a linked CSS file.\n:host, div {\n    display: block;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n}At this point, you can render one square with a knight in it, like so:\n\n    \n\nIf you're paying attention, you'll notice that height: 100% doesn't really\nmean anything as none of the parent divs have a height to be 100% of, but it\nwill make sense later when we put the Square in a div that has an absolute\nheight.\nThen, let's build the board. Start by building out a component that just renders\none square.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-board',\n    template: `\n    \n        \n            \n        \n    \n    `\n})\nexport class BoardComponent {\n}Now, we need to render 64 of them. We will need an *ngFor, but Angular isn't\nvery good at for loops, so we have to make an array of 64 items.\n\n    \n        \n    \n// ...\nexport class BoardComponent {\n    sixtyFour = new Array(64).fill(0).map((_, i) => i);\n}\nThen, you just have a lot of black squares in a vertical list. Not very chess-y.\nTo make it an 8x8 grid, we are going to wrap them all in a , and use the cool new CSS feature, CSS Grid. Make sure you are\nusing a modern browser. Apply this style to the wrapping .board:\n.board {\n    width: 100%;\n    height: 100%;\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: repeat(8, 12.5%);\n    grid-template-rows: repeat(8, 12.5%);\n}For brevity's sake you could just set .board to a fixed width and height\nof 560px. I added a ContainerComponent, just to specify that size, to keep\nthe board independent of where it will be placed. At this point, you will have\nan 8x8 board, but it still doesn't quite look like chess.\n\nMaking the chessboard pattern and placing one knight on the board\nWe're going to need a way to express coordinates on the board. Define a new\ninterface, to hold x and y coordinates.\nexport interface Coord {\n  x: number;\n  y: number;\n}Save it in a new file, coord.ts, and import it into your Board component file.\nThen, we need to convert [0..63] (the indices of the *ngFor) to Coord\nobjects.\nexport class Board {\n    // ...\n    xy(i): Coord {\n      return {\n          x: i % 8,\n          y: Math.floor(i / 8)\n      }\n    }\n}\nYou can then quite easily go from Coord to whether the square is black or not:\n    // ...\n    isBlack({ x, y }: Coord) {\n        return (x + y) % 2 === 1;\n    }Then, pass the result to each SquareComponent, and render only one KnightComponent in the top\nleft:\n\n    \n        \n    \nAnd look at that, we have a chess board with one knight.\n\nMaking the knight move around\n\nAt this point, your code should look like this commit. You can\nstart fresh from there if you want.\n\nWe can clearly represent the position of a knight in one Coord object. You\ncould store this on the BoardComponent itself:\n\nknightPosition: Coord = { x: 2, y: 5 };But we're going to want to read this elsewhere and drive the game logic from it,\nand we don't want all the game logic to be trapped inside the BoardComponent.\nSo, create a GameService, and represent the changing position of the knight\nwith an RxJS BehaviorSubject. This is an ultra-lightweight way of\nbuilding an @ngrx-style Store without any boilerplate. It allows us to\n'broadcast' updates to the knight's position to any interested components.\nLike any Subject, BehaviourSubject can be used as an Observable, and\ncomponents can subscribe to it with the | async pipe. But unlike a regular\nSubject, it can also have an initial value, and will replay the most recent\nvalue to any new subscribers. This is exactly what we want.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n}As you can see, this is a very simple service. Inject it into your\nBoardComponent, and let's put the Knight where the GameService\nsays it should go.\n\nknightPosition$ = this.game.knightPosition$;\nconstructor(private game: GameService) { }This works, but it's very hard to read. A better solution would be to put the\nentire *ngFor section in the scope of one subscription. You can do that\nwithout introducing a redundant , by using  and a fancy\ntrick: since knightPosition$|async is always truthy, you can put it in an\n*ngIf and give the result a name using the *ngIf=\"AAA as BBB\" syntax. Here's\nthe entire template:\n    \n        \n            \n                \n                    \n                    \n                \n            \n        \n    The resulting template is much clearer.\nNow that we have a knightPosition$ and even a GameService.moveKnight()\nfunction, we can hook up a click event on each  to move the knight\naround the board. We're going to remove it later, so just throw it in the\nBoardComponent:\nhandleSquareClick(pos: Coord) {\n    this.game.moveKnight(pos);\n}Click around, and your noble KnightComponent will follow, even though he is breaking\nthe rules. So, let's add the rules. Amend the GameService to include\na canMoveKnight function, based on the current position and a prospective\nposition. You can store the currentPosition by subscribing internally to\nknightPosition$ and writing out each new value into an instance variable.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n    currentPosition: Coord;\n\n    constructor() {\n        this.knightPosition$.subscribe(kp => {\n            this.currentPosition = kp;\n        })\n    }\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n    canMoveKnight(to: Coord) {\n        const { x, y } = this.currentPosition;\n        const dx = to.x - x;\n        const dy = to.y - y;\n\n        return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n               (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n    }\n\n}Amend handleSquareClick to check the rules before executing the move:\nhandleSquareClick(pos: Coord) {\n    if (this.game.canMoveKnight(pos)) {\n        this.game.moveKnight(pos);\n    }\n}And voilà, your knight won't execute an illegal move. We will be replacing this\nclick handler in just a moment, but we have separated the game logic out, so we\ncan reuse those two functions.\nImplementing drag and drop\n\nAt this point, your code should be look like this commit.\n\nTake a moment to think about what we have to work with. We have:\n\nA KnightComponent which we want to be able to drag,\nMany SquareComponents on which he could be dropped,\nA way to express that state change (GameService.moveKnight),\nAnd a way to compute where we can drop him (GameService.canMoveKnight).\n\nOur strategy for implementing drag and drop is this:\n\nMake the knight draggable\nTurn all the squares into drop targets\nOnly allow drops into squares where canMoveKnight returns true\nOn each successful drop, call moveKnight, and Angular will re-render with\nthe new state.\nAdd some extra visuals to guide the interaction\n\nIf you have used other drag and drop libraries, this may seem a bit weird --\nwhat happens to the Knight that we're dragging after we drop him? The answer is,\nhe disappears. After step 1, we will have a knight you can pick up, but nothing\ninteresting will happen when we let go, except that the preview will vanish. We\nare going to do steps 3 and 4 on the drop targets, which are notified when you\ndrop something on them.\nPart 1. Make the knight draggable\nFirst, we need a type to describe what we're dragging, so that the squares can\nlisten for knights floating above them. Store a constant string \"KNIGHT\" in\na new file. This is better than typing the same string over and over, and serves\nas a single place where all your different chess piece types are defined.\n// constants.ts\nexport const ItemTypes = {\n    KNIGHT: \"KNIGHT\"\n}Then, make your KnightComponent into a drag source.\n\nInject DndService into your KnightComponent\nCreate a dead simple drag source which emits ItemTypes.KNIGHT, and a simple\n{} to represent what's being dragged. We don't need any more information\nthan that, but if you were doing >1 piece, you would have to specify which\nknight was being dragged. This is where you'd do it.\nAttach the drag source to the Knight's DOM element.\nIn ngOnDestroy, unsubscribe the drag source.\n\nHere's all four in one go:\nimport { Component } from '@angular/core';\nimport { DndService } from \"@ng-dnd/core\";\nimport { ItemTypes } from './constants';\n\n@Component({\n    selector: 'app-knight',\n                     // step 3\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 700;\n        font-size: 54px;\n    }\n    `]\n})\nexport class KnightComponent {\n    // step 2\n    knightSource = this.dnd.dragSource(ItemTypes.KNIGHT, {\n        beginDrag: () => ({})\n    });\n\n    // step 1\n    constructor(private dnd: DndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.knightSource.unsubscribe();\n    }\n}Try dragging your little knight, and you'll find that you can. But the\ninteraction is slightly confusing - you can't tell at a glance that the knight\nis conceptually in-flight, it just looks like there are two knights. So let's\nlisten to whether we are dragging the knight, and make the stationary one look\ndifferent while we are.\n\nUse the DragSource.listen and DragSourceMonitor.isDragging methods to\nget an observable isDragging$ on your KnightComponent.\nUse that observable in your template to change styles\n\n// component\n// (this is an Observable)\nisDragging$ = this.knightSource.listen(monitor => monitor.isDragging());\n♘/* in the style block */\n.dragging {\n    opacity: 0.25;\n}Now, the knight on the board will be a bit transparent when you've picked it up.\nYou could set it to opacity: 0, but in chess, players like to know where the\npiece came from. @ng-dnd makes no assumptions about how to render\nany elements, so you can always customise their appearance at any stage of the\ndrag and drop process.\nPart 2: Make the squares into drop targets\nBecause canMoveKnight has to be computed once per square, each square is going\nto have to know where it is on the board. However, the SquareComponent is\nperfectly good at what it does. We don't want to ruin a good thing. Let's wrap\nit with another component, BoardSquareComponent, that will handle the drag and drop,\nand leave the black and white rendering to SquareComponent. This is a basic wrapper\nwhich preserves the size of the underlying squares:\nimport { Component, Input  } from \"@angular/core\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n}Add it to your module, and replace the  in the BoardComponent\ntemplate with this:\n\n    \nThen, we're going to add a drop target to BoardSquareComponent and attach it\nto that wrapper div. It's very similar to the drag source.\n\nInject DndService\nCreate a drop target\nAttach it to the DOM\nUnsubscribe it in ngOnDestroy.\n\nimport { Component, Input  } from \"@angular/core\";\nimport { DndService } from \"@ng-dnd/core\";\nimport { ItemTypes } from \"./constants\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n                         \n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n\n    // step 2\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n\n    });\n\n    // step 1\n    constructor(private dnd: DndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.target.unsubscribe();\n    }\n\n}Parts 3 and 4: make the knight move around on drop\nNext up is to incorporate the game logic, and to actually move the knight. We're\ngoing to use two hooks in the drop target: DropTargetSpec.canDrop and\nDropTargetSpec.drop. We have already done the heavy lifting for both in\nGameService. Inject GameService in the constructor, and incorporate its\nmethods.\ntarget = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n    canDrop: monitor => {\n        return this.game.canMoveKnight(this.position);\n    },\n    drop: monitor => {\n        this.game.moveKnight(this.position);\n    }\n});\n\nconstructor(private dnd: DndService, private gme: GameService) {}Now you should be able to drag your knight around the board!\nPart 5: Extra visuals\nWe have some guidance already about where you can drop a knight. The mouse\ncursor gets a different icon depending on whether you can or not. But usually,\nthis is not enough of an indicator. Good UI means making difficult things\nobvious and learnable. Someone who has never seen a knight should be able to\nfigure out where one can go.\nIn that spirit, we will change the colour of the squares while dragging,\ndepending on whether they represent a valid move, and colour the square you're\nhovering over either red or green depending on whether dropping would result in\na move.\nThe procedure is almost identical to what we did for the Knight earlier on.\n\nUse the DropTarget.listen, DropTargetMonitor.canDrop and\nDropTargetMonitor.isOver methods to observe changes in drag state\nUse observables in your template to change styles on an overlay div.\n\n// We are assuming RxJS 5.5+ here, but you can use plain Observable.map\nimport { map } from 'rxjs/operators';\n\n// template:    \n        \n            \n        \n        \n    \nexport class BoardSquareComponent {\n    // ...\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n        // ...\n    });\n\n    collected$ = this.target.listen(m => ({\n        canDrop: m.canDrop(),\n        isOver: m.isOver(),\n    }));\n    \n    showOverlay$ = this.collected$.pipe(map(c => c.isOver || c.canDrop));\n\n    overlayStyle$ = this.collected$.pipe(map(coll => {\n        let { canDrop, isOver } = coll;\n        let bg: string = \"rgba(0,0,0,0)\";\n        if (canDrop && isOver) { bg = 'green'; }\n        else if (canDrop && !isOver) { bg = 'yellow'; }\n        else if (!canDrop && isOver) { bg = 'red'; }\n        return {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n            opacity: 0.5,\n            backgroundColor: bg\n        }\n    }));\n\n    // ...\n\n}Here's what it looks like:\n\nLastly, we're going to customize the drag preview (that little knight that\nfollows the mouse around). @ng-dnd has some very powerful ways to\ncustomize this, but we're going to use a simple image. It's quite simple:\n\nCreate an Image\nWait for it to load\nConnect it to the knightSource as a drag preview\n\nWe can do this in just a few lines.\n// ...\nexport class KnightComponent {\n    // ...\n\n    ngOnInit() {\n        const img = new Image();\n        img.src = // ... long 'data:image/png;base64' url\n                  // regular 'https://' URLs work here too\n        img.onload = () => this.knightSource.connectDragPreview(img);\n    }\n}For that long URL, see this file.\nThen we get a funky horse as our preview.\n\nHave a go with the live demo here.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/translating-react-code.html":{"url":"additional-documentation/translating-react-code.html","title":"additional-page - Translating React Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTranslating React Code\nThere are many code examples and libraries on the web written for react-dnd,\nthe most important of which is the actual react-dnd\ndocumentation. In the\ninterest of making them useful or at least understandable, this library presents\na fairly similar API to the original. There are, of course, some differences\nmandated by the style and limitations of React and Angular. We will illustrate\nthis with the react-dnd DragSource compared to @ng-dnd's\nDndService.dragSource(). Here are the original API\ndocs on\nDragSource; the following is a small but complete example for a quick\nreference. If you know how to use react-dnd already, then this should show you\nmost of it. If you don't know react-dnd, this will help you read the example code demos in the react-dnd documentation.\nHere's a basic example in React:\nlet itemSourceSpec = {\n  beginDrag: (props, monitor) => {\n    return { someProperty: props.someProperty };\n  },\n  endDrag: (props, monitor, component) => {\n    if (monitor.didDrop()) {\n      component.fireAction(monitor.getItem());\n    }\n  }\n}\n@DragSource(\"ITEM\", itemSourceSpec, (connect, monitor) => ({\n  connectDragSource: connect.connectDragSource(),\n  isDragging: monitor.isDragging(),\n}))\nexport class MyComponent extends React.Component {\n  fireAction() { /* ... */ }\n  render() {\n    const { someProperty, isDragging } = this.props;\n    return connectDragSource(\n      \n        {someProperty}\n        {isDragging ? 'I am being dragged now' : null}\n      \n    );\n  }\n}And here's the Angular translation:\n@Component({\n  template: `  \n    {{someProperty}}\n    \n      I am being dragged now\n    \n  \n  `})\nexport class MyComponent {\n  @Input() someProperty: string;\n  itemSource = dnd.dragSource(\"ITEM\", {\n    beginDrag: (monitor) => {\n      return { someProperty: this.someProperty };\n    },\n    endDrag: (monitor) => {\n      if (monitor.didDrop()) {\n        this.fireAction(monitor.getItem());\n      }\n    }\n  });\n  collected$ = this.itemSource.listen(monitor => ({\n    isDragging: monitor.isDragging(),\n  }));\n  constructor(private dnd: DndService) {}\n  fireAction(item) { /* ... */ }\n  ngOnDestroy() { this.itemSource.destroy(); }\n}As you can see, the two are very similar. You should be able to take most\nReact/react-dnd examples and translate them quite directly into Angular. You\ncan almost copy and paste some parts.\n1. Biggest difference: Connections instead of Higher-Order Components\nThere is a React concept of 'props', similar to Input() in Angular. The\nprimary difference relevant to us is that in React you can create a 'wrapper' or\n'higher-order' component that will pass all of its props to the one it is\n'wrapping' or 'decorating', with extra behaviour or new props added. This is how\nreact-dnd works: wrap your component with @DragSource(type, spec, collect: (connect, monitor) => Object), and the output of the  collect function is\ninjected into your component's props.\nIn Angular, we run everything inside your component, using methods on an\ninjected DndService to create connections. Connections are a go-between\nfor subscribing to the global drag state and can be connected to DOM\nelements. This difference is typical of the React Way and the Angular Way. You\ncan create more than one connection for a component, to accomplish the same\nthing as composing multiple decorators in react-dnd.\nThere are five other ways this approach makes for slightly different-looking but\nvery similar-functioning code.\n2. You must destroy the connection object when you are done with it.\nIn React, this is managed by the wrapper component. In Angular, you have to do\nit yourself. See ConnectionBase.unsubscribe.\n3. No props or component arguments in the spec callbacks\nThere are no props in Angular, as discussed above. Instead, all inputs to a component\nor properties relevant to the template are declared on the component class.\nTherefore, using this is appropriate instead. That also makes component\nmoot, since it would also refer to this. Therefore, all of the callbacks on the\ntwo *Spec interfaces have only monitor as an argument.\nOne thing to be aware of is that to access this in an function you pass\nelsewhere, you must use Arrow notation: (arrow) => this.notation; for your\nspec callbacks.\n4. Information about current drag state comes through an Observable\nIn react-dnd the collect((props, monitor) => {}) function supplies the\ncomponent props 'from above'. In Angular (here, DragSource.listen), the\nlibrary gives you an Observable you can subscribe to in your template. The\nexample above creates an Object { ... } and subscribes to it all in one go\n(the internals make this efficient), but you are free to do listen(m => m.isDragging()), with one subscription for each interesting value. You might\ncombine information from two different connections using\nObservable.combineLatest, for example.\nI found the terms connect and collect far too similar and confusing, so\nI renamed collect to listen.\n5. connectDragSource() (etc.) functions vs Angular directives\nIn the example above, connect.connectDragSource() returns a function that will\nlink up a particular part of the JSX template's DOM to the wrapper component. To\naccomplish the same thing in Angular we must connect some DOM from the template\nto a Connection object. The Angular Way to do this is with a directive,\nwhich connects to the DOM via its injected ElementRef. The Angular translation\nabove uses [dragSource]=\"itemSource\" on the same part of the template as the\nReact code does.\nSome React examples will have two different drag sources + associated connectors\n(on different DOM elements), or one source and one connectDragPreview. Angular\ncan do both patterns with directives, because each directive is linked to one Connection.\n6. Can't supply a dynamic type via a (props) => props.type callback, use setType instead\nImagine you want to make a component draggable based on type(s) specified on the\ncomponent inputs.\nreact-dnd allows strings and ES6 Symbols in the type argument. But you can\nalso pass a function  of (props) => string|symbol; in this way, your item\ntypes can depend on the inputs to your component, and even change over time when\nthe props change. It's not a plain asynchronous callback like the rest of the\nspec, it is called when the props change on the decorating component, before any\nasynchronous drag operations start. Angular doesn't have a way for arbitrary\nobjects to listen to ngOnChanges(), so we have to do it manually.\nYou can supply a default type, or null, and update it in later as the\n@Input() property is populated. If you supply null, @ng-dnd will\ndefer connecting the DOM and the subscription to the monitor until this is\ndone. See DragSource.setType for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/testing.html":{"url":"additional-documentation/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nUsage with Jest\nSee The React DnD testing \nguide for details about \nhow to use dnd-core and react-dnd-test-backend with Jest. In particular, you \nwill need to configure the moduleNameMapper as described there.\nTesting Components in Isolation\nThe Angular way of supplying drag state to components is not as easily testable \nas the React way. Currently it is not easy to isolate a component's rendering \nfrom the drag sources, drop targets and drag layers it listens to.\nThe Test Backend\nReact DnD offers a test backend that does not require the DOM, and offers an \nAPI for easy simulation of drag and drop events. This is useful for testing an \nentire drag and drop interaction. (Imagine trying to construct the exact mouse \nevents that represent a drag, just to do basic tests!) It is also useful as a \nlightweight no-op backend if you do not need to test the drag and drop \ninteraction.\nInstall it with:\nyarn add -D react-dnd-test-backendExample usage (example component defined below):\n// Import the test backend\nimport { createTestBackend, TestBackend } from 'react-dnd-test-backend';\n// We will need to find the DragDropManager to access the backend through\n// dependency injection\nimport { DndModule, DRAG_DROP_MANAGER } from \"@ng-dnd/core\";\n\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\ndescribe(MyComponent.name, () => {\n\n    let component: MyComponent;\n    let fixture: ComponentFixture;\n\n    // Use this backend to drive drag and drop interactions\n    let backend: TestBackend;\n\n    // We will store the handler ID for each, to pass to the test backend.\n    let source: any;\n    let target: any;\n\n    // MyComponent should render differently while dragging\n    const draggingClassApplied = () => {\n        return fixture.debugElement.query(By.css('.dragging')) != null;\n    };\n\n    beforeEach(async(() => {\n        TestBed.configureTestingModule({\n            imports: [\n                // supply the test backend when creating the testing module\n                DndModule.forRoot({ backend: createTestBackend })\n            ],\n            declarations: [MyComponent]\n        })\n    }));\n\n    beforeEach(() => {\n        // grab the manager\n        const manager = TestBed.get(DRAG_DROP_MANAGER);\n        // grab the backend off the manager\n        backend = manager.getBackend();\n        fixture = TestBed.createComponent(MyComponent);\n        component = fixture.componentInstance;\n        // the source and target handler IDs are available after change\n        // detection\n        fixture.detectChanges();\n        source = component.source.getHandlerId();\n        target = component.target.getHandlerId();\n    });\n\n    it('should drag and then drop', () => {\n        // pick up the drag source\n        backend.simulateBeginDrag([source]);\n\n        // check that it rendered differently\n        fixture.detectChanges();\n        expect(draggingClassApplied()).toBeTruthy();\n\n        // hover over the target\n        backend.simulateHover([target]);\n        // drop over the most recently hovered target(s)\n        backend.simulateDrop();\n        // complete the interaction\n        backend.simulateEndDrag();\n\n        fixture.detectChanges();\n        expect(draggingClassApplied()).toBeFalsy();\n    });\n\n});import { Component } from '@angular/core';\nimport { DndService } from '@ng-dnd/core';\n@Component({\ntemplate: `\n    \n    \n`\n})\nclass MyComponent {\n    source = this.dnd.dragSource(\"TEST\", {\n        beginDrag: () => ({}),\n    });\n    target = this.dnd.dropTarget(\"TEST\", {});\n    isDragging$ = this.source.listen(m => m.isDragging());\n    constructor (private dnd: DndService) {}\n    ngOnDestroy() {\n        this.source.unsubscribe();\n        this.target.unsubscribe();\n    }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
